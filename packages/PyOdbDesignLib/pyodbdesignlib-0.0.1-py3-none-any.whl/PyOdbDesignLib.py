# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.1.1
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _PyOdbDesignLib
else:
    import _PyOdbDesignLib

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _PyOdbDesignLib.delete_SwigPyIterator

    def value(self):
        return _PyOdbDesignLib.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _PyOdbDesignLib.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _PyOdbDesignLib.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _PyOdbDesignLib.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _PyOdbDesignLib.SwigPyIterator_equal(self, x)

    def copy(self):
        return _PyOdbDesignLib.SwigPyIterator_copy(self)

    def next(self):
        return _PyOdbDesignLib.SwigPyIterator_next(self)

    def __next__(self):
        return _PyOdbDesignLib.SwigPyIterator___next__(self)

    def previous(self):
        return _PyOdbDesignLib.SwigPyIterator_previous(self)

    def advance(self, n):
        return _PyOdbDesignLib.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _PyOdbDesignLib.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _PyOdbDesignLib.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _PyOdbDesignLib.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _PyOdbDesignLib.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _PyOdbDesignLib.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _PyOdbDesignLib.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _PyOdbDesignLib:
_PyOdbDesignLib.SwigPyIterator_swigregister(SwigPyIterator)
class Net(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, index):
        _PyOdbDesignLib.Net_swiginit(self, _PyOdbDesignLib.new_Net(name, index))
    __swig_destroy__ = _PyOdbDesignLib.delete_Net

    def GetName(self):
        return _PyOdbDesignLib.Net_GetName(self)

    def GetPinConnections(self):
        return _PyOdbDesignLib.Net_GetPinConnections(self)

    def GetIndex(self):
        return _PyOdbDesignLib.Net_GetIndex(self)

    def AddPinConnection(self, pComponent, pPin, name):
        return _PyOdbDesignLib.Net_AddPinConnection(self, pComponent, pPin, name)

# Register Net in _PyOdbDesignLib:
_PyOdbDesignLib.Net_swigregister(Net)
class Component(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, refDes, partName, pPackage, index, side):
        _PyOdbDesignLib.Component_swiginit(self, _PyOdbDesignLib.new_Component(refDes, partName, pPackage, index, side))
    __swig_destroy__ = _PyOdbDesignLib.delete_Component

    def GetRefDes(self):
        return _PyOdbDesignLib.Component_GetRefDes(self)

    def GetPartName(self):
        return _PyOdbDesignLib.Component_GetPartName(self)

    def GetPackage(self):
        return _PyOdbDesignLib.Component_GetPackage(self)

    def GetIndex(self):
        return _PyOdbDesignLib.Component_GetIndex(self)

    def GetSide(self):
        return _PyOdbDesignLib.Component_GetSide(self)

# Register Component in _PyOdbDesignLib:
_PyOdbDesignLib.Component_swigregister(Component)
class Design(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _PyOdbDesignLib.Design_swiginit(self, _PyOdbDesignLib.new_Design())
    __swig_destroy__ = _PyOdbDesignLib.delete_Design

    def Build(self, *args):
        return _PyOdbDesignLib.Design_Build(self, *args)

# Register Design in _PyOdbDesignLib:
_PyOdbDesignLib.Design_swigregister(Design)
class EdaDataFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _PyOdbDesignLib.EdaDataFile_swiginit(self, _PyOdbDesignLib.new_EdaDataFile())
    __swig_destroy__ = _PyOdbDesignLib.delete_EdaDataFile

    def GetPath(self):
        return _PyOdbDesignLib.EdaDataFile_GetPath(self)

    def GetUnits(self):
        return _PyOdbDesignLib.EdaDataFile_GetUnits(self)

    def Parse(self, path):
        return _PyOdbDesignLib.EdaDataFile_Parse(self, path)

    def GetLayerNames(self):
        return _PyOdbDesignLib.EdaDataFile_GetLayerNames(self)

    def GetAttributeNames(self):
        return _PyOdbDesignLib.EdaDataFile_GetAttributeNames(self)

    def GetAttributeTextValues(self):
        return _PyOdbDesignLib.EdaDataFile_GetAttributeTextValues(self)

    def GetNetRecords(self):
        return _PyOdbDesignLib.EdaDataFile_GetNetRecords(self)

    def GetNetRecordsByName(self):
        return _PyOdbDesignLib.EdaDataFile_GetNetRecordsByName(self)

    def GetPackageRecords(self):
        return _PyOdbDesignLib.EdaDataFile_GetPackageRecords(self)

    def GetPackageRecordsByName(self):
        return _PyOdbDesignLib.EdaDataFile_GetPackageRecordsByName(self)

# Register EdaDataFile in _PyOdbDesignLib:
_PyOdbDesignLib.EdaDataFile_swigregister(EdaDataFile)
BoardSide_Top = _PyOdbDesignLib.BoardSide_Top
BoardSide_Bottom = _PyOdbDesignLib.BoardSide_Bottom
class FileArchive(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, path):
        _PyOdbDesignLib.FileArchive_swiginit(self, _PyOdbDesignLib.new_FileArchive(path))
    __swig_destroy__ = _PyOdbDesignLib.delete_FileArchive

    def GetPath(self):
        return _PyOdbDesignLib.FileArchive_GetPath(self)

    def GetProductName(self):
        return _PyOdbDesignLib.FileArchive_GetProductName(self)

    def GetStepsByName(self):
        return _PyOdbDesignLib.FileArchive_GetStepsByName(self)

    def ParseFileModel(self):
        return _PyOdbDesignLib.FileArchive_ParseFileModel(self)

# Register FileArchive in _PyOdbDesignLib:
_PyOdbDesignLib.FileArchive_swigregister(FileArchive)
class LayerDirectory(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, path):
        _PyOdbDesignLib.LayerDirectory_swiginit(self, _PyOdbDesignLib.new_LayerDirectory(path))
    __swig_destroy__ = _PyOdbDesignLib.delete_LayerDirectory
    TOP_COMPONENTS_LAYER_NAME = _PyOdbDesignLib.LayerDirectory_TOP_COMPONENTS_LAYER_NAME
    BOTTOM_COMPONENTS_LAYER_NAME = _PyOdbDesignLib.LayerDirectory_BOTTOM_COMPONENTS_LAYER_NAME

    def GetName(self):
        return _PyOdbDesignLib.LayerDirectory_GetName(self)

    def GetPath(self):
        return _PyOdbDesignLib.LayerDirectory_GetPath(self)

    def Parse(self):
        return _PyOdbDesignLib.LayerDirectory_Parse(self)

# Register LayerDirectory in _PyOdbDesignLib:
_PyOdbDesignLib.LayerDirectory_swigregister(LayerDirectory)
class ComponentLayerDirectory(LayerDirectory):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, path, side):
        _PyOdbDesignLib.ComponentLayerDirectory_swiginit(self, _PyOdbDesignLib.new_ComponentLayerDirectory(path, side))
    __swig_destroy__ = _PyOdbDesignLib.delete_ComponentLayerDirectory

    def Parse(self):
        return _PyOdbDesignLib.ComponentLayerDirectory_Parse(self)

    def GetUnits(self):
        return _PyOdbDesignLib.ComponentLayerDirectory_GetUnits(self)

    def GetSide(self):
        return _PyOdbDesignLib.ComponentLayerDirectory_GetSide(self)

    def GetComponentRecords(self):
        return _PyOdbDesignLib.ComponentLayerDirectory_GetComponentRecords(self)

    def GetComponentRecordsByName(self):
        return _PyOdbDesignLib.ComponentLayerDirectory_GetComponentRecordsByName(self)

    def GetAttributeNames(self):
        return _PyOdbDesignLib.ComponentLayerDirectory_GetAttributeNames(self)

    def GetAttributeTextValues(self):
        return _PyOdbDesignLib.ComponentLayerDirectory_GetAttributeTextValues(self)

# Register ComponentLayerDirectory in _PyOdbDesignLib:
_PyOdbDesignLib.ComponentLayerDirectory_swigregister(ComponentLayerDirectory)
class NetlistFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    Staggered_Yes = _PyOdbDesignLib.NetlistFile_Staggered_Yes
    Staggered_No = _PyOdbDesignLib.NetlistFile_Staggered_No
    Staggered_Unknown = _PyOdbDesignLib.NetlistFile_Staggered_Unknown

    def __init__(self, path):
        _PyOdbDesignLib.NetlistFile_swiginit(self, _PyOdbDesignLib.new_NetlistFile(path))
    __swig_destroy__ = _PyOdbDesignLib.delete_NetlistFile

    def GetPath(self):
        return _PyOdbDesignLib.NetlistFile_GetPath(self)

    def GetName(self):
        return _PyOdbDesignLib.NetlistFile_GetName(self)

    def GetUnits(self):
        return _PyOdbDesignLib.NetlistFile_GetUnits(self)

    def GetOptimized(self):
        return _PyOdbDesignLib.NetlistFile_GetOptimized(self)

    def GetStaggered(self):
        return _PyOdbDesignLib.NetlistFile_GetStaggered(self)

    def GetNetNames(self):
        return _PyOdbDesignLib.NetlistFile_GetNetNames(self)

    def Parse(self):
        return _PyOdbDesignLib.NetlistFile_Parse(self)

# Register NetlistFile in _PyOdbDesignLib:
_PyOdbDesignLib.NetlistFile_swigregister(NetlistFile)
class Package(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, index):
        _PyOdbDesignLib.Package_swiginit(self, _PyOdbDesignLib.new_Package(name, index))

    def GetName(self):
        return _PyOdbDesignLib.Package_GetName(self)

    def GetIndex(self):
        return _PyOdbDesignLib.Package_GetIndex(self)

    def AddPin(self, name):
        return _PyOdbDesignLib.Package_AddPin(self, name)

    def GetPin(self, *args):
        return _PyOdbDesignLib.Package_GetPin(self, *args)
    __swig_destroy__ = _PyOdbDesignLib.delete_Package

# Register Package in _PyOdbDesignLib:
_PyOdbDesignLib.Package_swigregister(Package)
class Part(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name):
        _PyOdbDesignLib.Part_swiginit(self, _PyOdbDesignLib.new_Part(name))

    def GetName(self):
        return _PyOdbDesignLib.Part_GetName(self)
    __swig_destroy__ = _PyOdbDesignLib.delete_Part

# Register Part in _PyOdbDesignLib:
_PyOdbDesignLib.Part_swigregister(Part)
class Pin(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, name, index):
        _PyOdbDesignLib.Pin_swiginit(self, _PyOdbDesignLib.new_Pin(name, index))

    def GetName(self):
        return _PyOdbDesignLib.Pin_GetName(self)

    def GetIndex(self):
        return _PyOdbDesignLib.Pin_GetIndex(self)
    __swig_destroy__ = _PyOdbDesignLib.delete_Pin

# Register Pin in _PyOdbDesignLib:
_PyOdbDesignLib.Pin_swigregister(Pin)
class PinConnection(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, pComponent, pPin, name):
        _PyOdbDesignLib.PinConnection_swiginit(self, _PyOdbDesignLib.new_PinConnection(pComponent, pPin, name))

    def GetPin(self):
        return _PyOdbDesignLib.PinConnection_GetPin(self)

    def GetComponent(self):
        return _PyOdbDesignLib.PinConnection_GetComponent(self)
    __swig_destroy__ = _PyOdbDesignLib.delete_PinConnection

# Register PinConnection in _PyOdbDesignLib:
_PyOdbDesignLib.PinConnection_swigregister(PinConnection)
class StepDirectory(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, path):
        _PyOdbDesignLib.StepDirectory_swiginit(self, _PyOdbDesignLib.new_StepDirectory(path))
    __swig_destroy__ = _PyOdbDesignLib.delete_StepDirectory

    def GetName(self):
        return _PyOdbDesignLib.StepDirectory_GetName(self)

    def GetPath(self):
        return _PyOdbDesignLib.StepDirectory_GetPath(self)

    def GetEdaDataFile(self):
        return _PyOdbDesignLib.StepDirectory_GetEdaDataFile(self)

    def GetLayersByName(self):
        return _PyOdbDesignLib.StepDirectory_GetLayersByName(self)

    def GetNetlistsByName(self):
        return _PyOdbDesignLib.StepDirectory_GetNetlistsByName(self)

    def GetTopComponentLayerDir(self):
        return _PyOdbDesignLib.StepDirectory_GetTopComponentLayerDir(self)

    def GetBottomComponentLayerDir(self):
        return _PyOdbDesignLib.StepDirectory_GetBottomComponentLayerDir(self)

    def Parse(self):
        return _PyOdbDesignLib.StepDirectory_Parse(self)

# Register StepDirectory in _PyOdbDesignLib:
_PyOdbDesignLib.StepDirectory_swigregister(StepDirectory)

def ltrim(s):
    return _PyOdbDesignLib.ltrim(s)

def rtrim(s):
    return _PyOdbDesignLib.rtrim(s)

def trim(s):
    return _PyOdbDesignLib.trim(s)

def ltrim_copy(s):
    return _PyOdbDesignLib.ltrim_copy(s)

def rtrim_copy(s):
    return _PyOdbDesignLib.rtrim_copy(s)

def trim_copy(s):
    return _PyOdbDesignLib.trim_copy(s)
class Via(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _PyOdbDesignLib.Via_swiginit(self, _PyOdbDesignLib.new_Via())
    __swig_destroy__ = _PyOdbDesignLib.delete_Via

    def GetName(self):
        return _PyOdbDesignLib.Via_GetName(self)

# Register Via in _PyOdbDesignLib:
_PyOdbDesignLib.Via_swigregister(Via)

