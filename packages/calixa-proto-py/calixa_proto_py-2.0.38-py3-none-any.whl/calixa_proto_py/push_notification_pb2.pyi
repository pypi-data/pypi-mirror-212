# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from action_pb2 import (
    RequestConfig as action_pb2___RequestConfig,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

TemplateValue = typing___NewType('TemplateValue', builtin___int)
type___TemplateValue = TemplateValue
Template: _Template
class _Template(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[TemplateValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    TEMPLATE_UNSPECIFIED = typing___cast(TemplateValue, 0)
    EMAIL_NOTE = typing___cast(TemplateValue, 1)
    EMAIL_AUTOMATION = typing___cast(TemplateValue, 2)
    WEBHOOK = typing___cast(TemplateValue, 3)
    SLACK = typing___cast(TemplateValue, 4)
    TRACK_EVENT_AUTOMATION_EMAIL = typing___cast(TemplateValue, 5)
    TRACK_EVENT_AUTOMATION_SLACK = typing___cast(TemplateValue, 6)
    EMAIL_AUTOMATION_METRICS = typing___cast(TemplateValue, 7)
    SLACK_AUTOMATION_METRICS = typing___cast(TemplateValue, 8)
    EMAIL_INVITE = typing___cast(TemplateValue, 9)
    SLACK_INTERNAL_NOTIFICATION = typing___cast(TemplateValue, 10)
TEMPLATE_UNSPECIFIED = typing___cast(TemplateValue, 0)
EMAIL_NOTE = typing___cast(TemplateValue, 1)
EMAIL_AUTOMATION = typing___cast(TemplateValue, 2)
WEBHOOK = typing___cast(TemplateValue, 3)
SLACK = typing___cast(TemplateValue, 4)
TRACK_EVENT_AUTOMATION_EMAIL = typing___cast(TemplateValue, 5)
TRACK_EVENT_AUTOMATION_SLACK = typing___cast(TemplateValue, 6)
EMAIL_AUTOMATION_METRICS = typing___cast(TemplateValue, 7)
SLACK_AUTOMATION_METRICS = typing___cast(TemplateValue, 8)
EMAIL_INVITE = typing___cast(TemplateValue, 9)
SLACK_INTERNAL_NOTIFICATION = typing___cast(TemplateValue, 10)
type___Template = Template

NotificationFrequencyValue = typing___NewType('NotificationFrequencyValue', builtin___int)
type___NotificationFrequencyValue = NotificationFrequencyValue
NotificationFrequency: _NotificationFrequency
class _NotificationFrequency(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[NotificationFrequencyValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    NOTIFICATION_FREQUENCY_UNSPECIFIED = typing___cast(NotificationFrequencyValue, 0)
    NOTIFICATION_FREQUENCY_HOURLY = typing___cast(NotificationFrequencyValue, 1)
    NOTIFICATION_FREQUENCY_DAILY = typing___cast(NotificationFrequencyValue, 2)
    NOTIFICATION_FREQUENCY_WEEKLY = typing___cast(NotificationFrequencyValue, 3)
    NOTIFICATION_FREQUENCY_MONTHLY = typing___cast(NotificationFrequencyValue, 4)
    NOTIFICATION_FREQUENCY_QUARTERLY = typing___cast(NotificationFrequencyValue, 5)
    NOTIFICATION_FREQUENCY_YEARLY = typing___cast(NotificationFrequencyValue, 6)
    NOTIFICATION_FREQUENCY_ALL_TIME = typing___cast(NotificationFrequencyValue, 1000)
NOTIFICATION_FREQUENCY_UNSPECIFIED = typing___cast(NotificationFrequencyValue, 0)
NOTIFICATION_FREQUENCY_HOURLY = typing___cast(NotificationFrequencyValue, 1)
NOTIFICATION_FREQUENCY_DAILY = typing___cast(NotificationFrequencyValue, 2)
NOTIFICATION_FREQUENCY_WEEKLY = typing___cast(NotificationFrequencyValue, 3)
NOTIFICATION_FREQUENCY_MONTHLY = typing___cast(NotificationFrequencyValue, 4)
NOTIFICATION_FREQUENCY_QUARTERLY = typing___cast(NotificationFrequencyValue, 5)
NOTIFICATION_FREQUENCY_YEARLY = typing___cast(NotificationFrequencyValue, 6)
NOTIFICATION_FREQUENCY_ALL_TIME = typing___cast(NotificationFrequencyValue, 1000)
type___NotificationFrequency = NotificationFrequency

class Notification(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    organization_id: typing___Text = ...
    template: type___TemplateValue = ...
    notification_frequency: type___NotificationFrequencyValue = ...
    time_zone: typing___Text = ...
    idempotency_key: typing___Text = ...

    @property
    def email(self) -> type___Email: ...

    @property
    def webhook(self) -> action_pb2___RequestConfig: ...

    @property
    def slack(self) -> type___Slack: ...

    @property
    def sms(self) -> type___Sms: ...

    def __init__(self,
        *,
        organization_id : typing___Optional[typing___Text] = None,
        template : typing___Optional[type___TemplateValue] = None,
        email : typing___Optional[type___Email] = None,
        webhook : typing___Optional[action_pb2___RequestConfig] = None,
        slack : typing___Optional[type___Slack] = None,
        sms : typing___Optional[type___Sms] = None,
        notification_frequency : typing___Optional[type___NotificationFrequencyValue] = None,
        time_zone : typing___Optional[typing___Text] = None,
        idempotency_key : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"channel",b"channel",u"email",b"email",u"slack",b"slack",u"sms",b"sms",u"webhook",b"webhook"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"channel",b"channel",u"email",b"email",u"idempotency_key",b"idempotency_key",u"notification_frequency",b"notification_frequency",u"organization_id",b"organization_id",u"slack",b"slack",u"sms",b"sms",u"template",b"template",u"time_zone",b"time_zone",u"webhook",b"webhook"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"channel",b"channel"]) -> typing_extensions___Literal["email","webhook","slack","sms"]: ...
type___Notification = Notification

class Email(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    to: typing___Text = ...
    subject: typing___Text = ...
    body: typing___Text = ...
    variables: typing___Text = ...

    def __init__(self,
        *,
        to : typing___Optional[typing___Text] = None,
        subject : typing___Optional[typing___Text] = None,
        body : typing___Optional[typing___Text] = None,
        variables : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"body",b"body",u"subject",b"subject",u"to",b"to",u"variables",b"variables"]) -> None: ...
type___Email = Email

class Webhook(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    url: typing___Text = ...
    payload: typing___Text = ...

    def __init__(self,
        *,
        url : typing___Optional[typing___Text] = None,
        payload : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"payload",b"payload",u"url",b"url"]) -> None: ...
type___Webhook = Webhook

class Slack(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    access_token: typing___Text = ...
    message: typing___Text = ...
    body: typing___Text = ...
    variables: typing___Text = ...
    channel: typing___Text = ...
    user_id: typing___Text = ...
    email: typing___Text = ...
    fallback_id: typing___Text = ...

    def __init__(self,
        *,
        access_token : typing___Optional[typing___Text] = None,
        message : typing___Optional[typing___Text] = None,
        body : typing___Optional[typing___Text] = None,
        variables : typing___Optional[typing___Text] = None,
        channel : typing___Optional[typing___Text] = None,
        user_id : typing___Optional[typing___Text] = None,
        email : typing___Optional[typing___Text] = None,
        fallback_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"channel",b"channel",u"email",b"email",u"id",b"id",u"user_id",b"user_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"access_token",b"access_token",u"body",b"body",u"channel",b"channel",u"email",b"email",u"fallback_id",b"fallback_id",u"id",b"id",u"message",b"message",u"user_id",b"user_id",u"variables",b"variables"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"id",b"id"]) -> typing_extensions___Literal["channel","user_id","email"]: ...
type___Slack = Slack

class Sms(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    number: typing___Text = ...
    message: typing___Text = ...

    def __init__(self,
        *,
        number : typing___Optional[typing___Text] = None,
        message : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"message",b"message",u"number",b"number"]) -> None: ...
type___Sms = Sms
