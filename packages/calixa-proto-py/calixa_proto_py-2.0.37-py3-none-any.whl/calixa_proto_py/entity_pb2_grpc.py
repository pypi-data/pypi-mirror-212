# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import entity_pb2 as entity__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class EventServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEventTimeline = channel.unary_unary(
                '/calixa.domain.entity.EventService/GetEventTimeline',
                request_serializer=entity__pb2.EventTimelineRequest.SerializeToString,
                response_deserializer=entity__pb2.EventTimelineResponse.FromString,
                )
        self.Evince = channel.unary_unary(
                '/calixa.domain.entity.EventService/Evince',
                request_serializer=entity__pb2.Entity.SerializeToString,
                response_deserializer=entity__pb2.EvinceResponse.FromString,
                )
        self.EvinceBatch = channel.unary_unary(
                '/calixa.domain.entity.EventService/EvinceBatch',
                request_serializer=entity__pb2.EntityList.SerializeToString,
                response_deserializer=entity__pb2.EvinceResponse.FromString,
                )


class EventServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetEventTimeline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Evince(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvinceBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EventServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEventTimeline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEventTimeline,
                    request_deserializer=entity__pb2.EventTimelineRequest.FromString,
                    response_serializer=entity__pb2.EventTimelineResponse.SerializeToString,
            ),
            'Evince': grpc.unary_unary_rpc_method_handler(
                    servicer.Evince,
                    request_deserializer=entity__pb2.Entity.FromString,
                    response_serializer=entity__pb2.EvinceResponse.SerializeToString,
            ),
            'EvinceBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.EvinceBatch,
                    request_deserializer=entity__pb2.EntityList.FromString,
                    response_serializer=entity__pb2.EvinceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'calixa.domain.entity.EventService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EventService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetEventTimeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EventService/GetEventTimeline',
            entity__pb2.EventTimelineRequest.SerializeToString,
            entity__pb2.EventTimelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Evince(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EventService/Evince',
            entity__pb2.Entity.SerializeToString,
            entity__pb2.EvinceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvinceBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EventService/EvinceBatch',
            entity__pb2.EntityList.SerializeToString,
            entity__pb2.EvinceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class EntityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetHydratedEntities = channel.unary_stream(
                '/calixa.domain.entity.EntityService/GetHydratedEntities',
                request_serializer=entity__pb2.GetHydratedEntitiesRequest.SerializeToString,
                response_deserializer=entity__pb2.EntityWithRelationships.FromString,
                )
        self.GetEntity = channel.unary_unary(
                '/calixa.domain.entity.EntityService/GetEntity',
                request_serializer=entity__pb2.GetEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.Entity.FromString,
                )
        self.GetHydratedEntity = channel.unary_unary(
                '/calixa.domain.entity.EntityService/GetHydratedEntity',
                request_serializer=entity__pb2.GetEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.EntityWithRelationships.FromString,
                )
        self.DeleteEntity = channel.unary_unary(
                '/calixa.domain.entity.EntityService/DeleteEntity',
                request_serializer=entity__pb2.DeleteEntityRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetEntityWithRelationships = channel.unary_unary(
                '/calixa.domain.entity.EntityService/GetEntityWithRelationships',
                request_serializer=entity__pb2.GetEntityWithRelationshipsRequest.SerializeToString,
                response_deserializer=entity__pb2.EntityWithRelationships.FromString,
                )
        self.SaveEntity = channel.unary_unary(
                '/calixa.domain.entity.EntityService/SaveEntity',
                request_serializer=entity__pb2.SaveEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.Entity.FromString,
                )
        self.PutEntity = channel.unary_unary(
                '/calixa.domain.entity.EntityService/PutEntity',
                request_serializer=entity__pb2.PutEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.SaveEntityResponse.FromString,
                )
        self.PatchEntity = channel.unary_unary(
                '/calixa.domain.entity.EntityService/PatchEntity',
                request_serializer=entity__pb2.PatchEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.SaveEntityResponse.FromString,
                )
        self.SaveRelationship = channel.unary_unary(
                '/calixa.domain.entity.EntityService/SaveRelationship',
                request_serializer=entity__pb2.RelationshipRequest.SerializeToString,
                response_deserializer=entity__pb2.Relationship.FromString,
                )
        self.RemoveRelationship = channel.unary_unary(
                '/calixa.domain.entity.EntityService/RemoveRelationship',
                request_serializer=entity__pb2.RelationshipRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetExternalAccountsForExternalUser = channel.unary_unary(
                '/calixa.domain.entity.EntityService/GetExternalAccountsForExternalUser',
                request_serializer=entity__pb2.ExternalAccountOrAccountUserRequest.SerializeToString,
                response_deserializer=entity__pb2.ExternalUserWithExternalAccounts.FromString,
                )
        self.GetExternalAccountUsersForExternalAccount = channel.unary_unary(
                '/calixa.domain.entity.EntityService/GetExternalAccountUsersForExternalAccount',
                request_serializer=entity__pb2.ExternalAccountOrAccountUserRequest.SerializeToString,
                response_deserializer=entity__pb2.ExternalAccountUsers.FromString,
                )
        self.GetShellEntityForExternalId = channel.unary_unary(
                '/calixa.domain.entity.EntityService/GetShellEntityForExternalId',
                request_serializer=entity__pb2.GetShellEntityForExternalIdRequest.SerializeToString,
                response_deserializer=entity__pb2.GetShellEntityForExternalIdResponse.FromString,
                )
        self.GetShellEntityForPotentialExternalId = channel.unary_unary(
                '/calixa.domain.entity.EntityService/GetShellEntityForPotentialExternalId',
                request_serializer=entity__pb2.GetShellEntityForPotentialExternalIdRequest.SerializeToString,
                response_deserializer=entity__pb2.GetShellEntityForExternalIdResponse.FromString,
                )


class EntityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetHydratedEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHydratedEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntityWithRelationships(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PatchEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveRelationship(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRelationship(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExternalAccountsForExternalUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExternalAccountUsersForExternalAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShellEntityForExternalId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShellEntityForPotentialExternalId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EntityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetHydratedEntities': grpc.unary_stream_rpc_method_handler(
                    servicer.GetHydratedEntities,
                    request_deserializer=entity__pb2.GetHydratedEntitiesRequest.FromString,
                    response_serializer=entity__pb2.EntityWithRelationships.SerializeToString,
            ),
            'GetEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntity,
                    request_deserializer=entity__pb2.GetEntityRequest.FromString,
                    response_serializer=entity__pb2.Entity.SerializeToString,
            ),
            'GetHydratedEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHydratedEntity,
                    request_deserializer=entity__pb2.GetEntityRequest.FromString,
                    response_serializer=entity__pb2.EntityWithRelationships.SerializeToString,
            ),
            'DeleteEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEntity,
                    request_deserializer=entity__pb2.DeleteEntityRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetEntityWithRelationships': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntityWithRelationships,
                    request_deserializer=entity__pb2.GetEntityWithRelationshipsRequest.FromString,
                    response_serializer=entity__pb2.EntityWithRelationships.SerializeToString,
            ),
            'SaveEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveEntity,
                    request_deserializer=entity__pb2.SaveEntityRequest.FromString,
                    response_serializer=entity__pb2.Entity.SerializeToString,
            ),
            'PutEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.PutEntity,
                    request_deserializer=entity__pb2.PutEntityRequest.FromString,
                    response_serializer=entity__pb2.SaveEntityResponse.SerializeToString,
            ),
            'PatchEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.PatchEntity,
                    request_deserializer=entity__pb2.PatchEntityRequest.FromString,
                    response_serializer=entity__pb2.SaveEntityResponse.SerializeToString,
            ),
            'SaveRelationship': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveRelationship,
                    request_deserializer=entity__pb2.RelationshipRequest.FromString,
                    response_serializer=entity__pb2.Relationship.SerializeToString,
            ),
            'RemoveRelationship': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRelationship,
                    request_deserializer=entity__pb2.RelationshipRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetExternalAccountsForExternalUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExternalAccountsForExternalUser,
                    request_deserializer=entity__pb2.ExternalAccountOrAccountUserRequest.FromString,
                    response_serializer=entity__pb2.ExternalUserWithExternalAccounts.SerializeToString,
            ),
            'GetExternalAccountUsersForExternalAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExternalAccountUsersForExternalAccount,
                    request_deserializer=entity__pb2.ExternalAccountOrAccountUserRequest.FromString,
                    response_serializer=entity__pb2.ExternalAccountUsers.SerializeToString,
            ),
            'GetShellEntityForExternalId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShellEntityForExternalId,
                    request_deserializer=entity__pb2.GetShellEntityForExternalIdRequest.FromString,
                    response_serializer=entity__pb2.GetShellEntityForExternalIdResponse.SerializeToString,
            ),
            'GetShellEntityForPotentialExternalId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShellEntityForPotentialExternalId,
                    request_deserializer=entity__pb2.GetShellEntityForPotentialExternalIdRequest.FromString,
                    response_serializer=entity__pb2.GetShellEntityForExternalIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'calixa.domain.entity.EntityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EntityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetHydratedEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/calixa.domain.entity.EntityService/GetHydratedEntities',
            entity__pb2.GetHydratedEntitiesRequest.SerializeToString,
            entity__pb2.EntityWithRelationships.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/GetEntity',
            entity__pb2.GetEntityRequest.SerializeToString,
            entity__pb2.Entity.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHydratedEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/GetHydratedEntity',
            entity__pb2.GetEntityRequest.SerializeToString,
            entity__pb2.EntityWithRelationships.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/DeleteEntity',
            entity__pb2.DeleteEntityRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntityWithRelationships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/GetEntityWithRelationships',
            entity__pb2.GetEntityWithRelationshipsRequest.SerializeToString,
            entity__pb2.EntityWithRelationships.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/SaveEntity',
            entity__pb2.SaveEntityRequest.SerializeToString,
            entity__pb2.Entity.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/PutEntity',
            entity__pb2.PutEntityRequest.SerializeToString,
            entity__pb2.SaveEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PatchEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/PatchEntity',
            entity__pb2.PatchEntityRequest.SerializeToString,
            entity__pb2.SaveEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveRelationship(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/SaveRelationship',
            entity__pb2.RelationshipRequest.SerializeToString,
            entity__pb2.Relationship.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveRelationship(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/RemoveRelationship',
            entity__pb2.RelationshipRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExternalAccountsForExternalUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/GetExternalAccountsForExternalUser',
            entity__pb2.ExternalAccountOrAccountUserRequest.SerializeToString,
            entity__pb2.ExternalUserWithExternalAccounts.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExternalAccountUsersForExternalAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/GetExternalAccountUsersForExternalAccount',
            entity__pb2.ExternalAccountOrAccountUserRequest.SerializeToString,
            entity__pb2.ExternalAccountUsers.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShellEntityForExternalId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/GetShellEntityForExternalId',
            entity__pb2.GetShellEntityForExternalIdRequest.SerializeToString,
            entity__pb2.GetShellEntityForExternalIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShellEntityForPotentialExternalId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.entity.EntityService/GetShellEntityForPotentialExternalId',
            entity__pb2.GetShellEntityForPotentialExternalIdRequest.SerializeToString,
            entity__pb2.GetShellEntityForExternalIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
