syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "integration_source.proto";
import "common.proto";
import "authentication.proto";
import "condition.proto";
import "learning.proto";
import "entity_pane.proto";

import "oltpannotation.proto";

option java_package = "io.calixa.domain.organization";
option java_multiple_files = true;
option optimize_for = SPEED;

package calixa.domain.organization;

enum AccessKeyStatus {
  ACCESS_KEY_STATUS_UNSPECIFIED = 0;
  ACCESS_KEY_ACTIVE = 1;
  ACCESS_KEY_INACTIVE = 2;
}

enum OrganizationUserStatus {
  ORGANIZATION_USER_STATUS_UNSPECIFIED = 0;
  ORGANIZATION_USER_ACTIVE = 1;
  ORGANIZATION_USER_SUSPENDED = 2;
  ORGANIZATION_USER_DELETED = 3;
  ORGANIZATION_USER_INVITED = 4;

  // Try to keep aligned with AccountUserStatus.
}


message AccessKey {
  option (calixa.oltp.oltp_primary_key) = {field_ids: [1, 2]};

  string organization_id = 1 [(calixa.oltp.oltp_field) = {nullable: false}];
  string access_key_id = 2 [(calixa.oltp.oltp_field) = {nullable: false}];
  string secret_access_key = 3 [(calixa.oltp.oltp_field) = {nullable: false}];
  AccessKeyStatus status = 4 [(calixa.oltp.oltp_field) = {nullable: false}];
  string created_by_organization_user_id = 5 [(calixa.oltp.oltp_field) = {nullable: false}];

  google.protobuf.Timestamp created_at = 10 [(calixa.oltp.oltp_field) = {nullable: false}];
  google.protobuf.Timestamp updated_at = 11 [(calixa.oltp.oltp_field) = {nullable: false}];
}

message Settings {

  reserved 1; // repeated calixa.domain.integration.IntegrationSource preferred_account_sources = 1;

  google.protobuf.Timestamp new_user_experience_completed_at = 2;
  google.protobuf.Timestamp new_user_experience_calixa_api_selected_at = 3;
  google.protobuf.Timestamp new_user_experience_data_warehouse_selected_at = 6;

  // Indicates what extended 'schema' API_USER and API_ACCOUNT entities have in order
  // to support Customer Defined Properties. When creating Datawarehouse syncs, these
  // custom properties can be exposed as way to allow users to map arbitrary columns
  // into these custom properties on API entities.
  repeated PropertyDefinition property_definitions = 4;

  repeated calixa.domain.condition.ScoringFunction scoring_functions = 5;

  // We will allow customers to define an ownership source independently
  // from preferred sources. That means, customers will be able to say their
  // source of truth for ownership records but will be able to display
  // their Account and AccountUsers in search using preferred sources.
  calixa.domain.integration.IntegrationSource ownership_source = 7;

  repeated calixa.domain.condition.Journey journeys = 8;

  reserved 9;

  /*
   * Tells us what is the linking definition to be used to map to an ApiAccount#id
   * or ApiCompany#id
   */
  repeated CrmLinkingDefinition linking_definitions = 10;

  string dashboards = 11;
  string quickviews = 12;

  reserved 13; // repeated calixa.domain.learning.PredictionTaskDefinition prediction_task_definitions = 13;

  calixa.domain.entitypane.EntityPaneSetup entity_pane_setup = 14;
  InboxSettings inbox_settings = 15;
}

message OrganizationUserSettings {
  repeated string favorite_views = 1;

  calixa.domain.entitypane.EntityPaneSetup entity_pane_setup = 2;
}

message PropertyDefinition {
  common.EntityType entity_type = 1;
  string display_name = 2;  // e.g.: "Street name"
  string property_name = 3; // e.g.: "street_name"
  PropertyFieldType type = 4;
  string field = 5;
}

enum PropertyFieldType {
  PROPERTY_FIELD_TYPE_UNSPECIFIED = 0;
  PROPERTY_FIELD_TYPE_INTEGER = 1;
  PROPERTY_FIELD_TYPE_DECIMAL = 2;
  PROPERTY_FIELD_TYPE_STRING = 3;
  PROPERTY_FIELD_TYPE_BOOLEAN = 4;
  PROPERTY_FIELD_TYPE_TIMESTAMP = 5;
}

message Organization {
  string organization_id = 1 [deprecated = true];
  string name = 2;
  string domain = 3;

  repeated AccessKey access_keys = 4 [deprecated = true];

  google.protobuf.Timestamp created_at = 10 [deprecated = true];
  google.protobuf.Timestamp updated_at = 11 [deprecated = true];

  Settings settings = 20;
}

message OrganizationUser {
  option (calixa.oltp.oltp_primary_key) = {field_ids: [2, 1]};

  string organization_user_id = 1 [(calixa.oltp.oltp_field) = {nullable: false}];
  string organization_id = 2 [(calixa.oltp.oltp_field) = {nullable: false}];

  string email = 3 [(calixa.oltp.oltp_field) = {nullable: true}]; // Copied from firebase_users.email
  reserved 4; // previously string encrypted_password

  string firebase_user_id = 5 [(calixa.oltp.oltp_field) = {nullable: true}];
  string name = 6 [(calixa.oltp.oltp_field) = {nullable: true}]; // Copied from firebase_users.name

  string invite_email = 7 [(calixa.oltp.oltp_field) = {nullable: true}];
  string invite_token = 8 [(calixa.oltp.oltp_field) = {nullable: true}];
  OrganizationUserStatus status = 9 [(calixa.oltp.oltp_field) = {nullable: false}];

  google.protobuf.Timestamp created_at = 10 [(calixa.oltp.oltp_field) = {nullable: false}];
  google.protobuf.Timestamp updated_at = 11 [(calixa.oltp.oltp_field) = {nullable: false}];
  google.protobuf.Timestamp deleted_at = 13 [(calixa.oltp.oltp_field) = {nullable: true}];

  // For the Console-only, this is a front-end specified payload that
  // captures arbitrary configuration settings that need to persist
  // beyond the user's session lifetime (like Dashboard configs)
  string client_data = 100 [(calixa.oltp.oltp_field) = {nullable: true}];

  OrganizationUserSettings settings = 12 [(calixa.oltp.oltp_field) = {nullable: false}];

  OrganizationUserRole role = 20 [(calixa.oltp.oltp_field) = {nullable: false}];
}

enum OrganizationUserRole {
  ORGANIZATION_USER_ROLE_UNSPECIFIED = 0;
  ORGANIZATION_USER_ROLE_ADMIN = 1;
  ORGANIZATION_USER_ROLE_MANAGER = 2;
  ORGANIZATION_USER_ROLE_USER = 3;

}

message TrendSearch {
  option (calixa.oltp.oltp_primary_key) = {field_ids: [30, 31]};

  string organization_id = 30 [(calixa.oltp.oltp_field) = {nullable: false}];
  string trend_search_id = 31 [(calixa.oltp.oltp_field) = {nullable: false}];
  google.protobuf.Timestamp created_at = 32 [(calixa.oltp.oltp_field) = {nullable: false}];
  google.protobuf.Timestamp updated_at = 33 [(calixa.oltp.oltp_field) = {nullable: false}];
  google.protobuf.Timestamp deleted_at = 34 [(calixa.oltp.oltp_field) = {nullable: true}];

  // fields used by console to save a trend search request
  // name that shows up and filter/rank_metrics stringified by console
  // sort is stored as local state in client/browser side.
  string name = 1 [(calixa.oltp.oltp_field) = {nullable: false}];
  calixa.domain.common.EntityType entity_type = 2 [(calixa.oltp.oltp_field) = {nullable: false}];
  string filters = 4 [(calixa.oltp.oltp_field) = {nullable: false}];
  // deprecated in favor of list of SortField
  string rank_metrics = 5 [(calixa.oltp.oltp_field) = {nullable: false}, deprecated = true];
  string sort_field = 6 [(calixa.oltp.oltp_field) = {nullable: false}, deprecated = true];
  string sort_order = 7 [(calixa.oltp.oltp_field) = {nullable: false}, deprecated = true];
  repeated string columns = 8 [(calixa.oltp.oltp_field) = {nullable: false}];

  bool is_public = 9 [(calixa.oltp.oltp_field) = {nullable: false}];
  string created_by_organization_user_id = 10 [(calixa.oltp.oltp_field) = {nullable: false}];
  string folder_id = 11 [(calixa.oltp.oltp_field) = {}];
  repeated calixa.domain.common.SortField sort_fields = 12 [(calixa.oltp.oltp_field) = {nullable: false}];
  string timeframe = 13 [(calixa.oltp.oltp_field) = {nullable: true}];
}

message CrmLinkingDefinition {
  // Only STRIPE, SALESFORCE and HUBSPOT integration sources supported atm:
  calixa.domain.integration.IntegrationSource source = 1;
  // Name of the property to be used for linking:
  string linking_field = 2;
  // Timestamp of the last re-linking process:
  google.protobuf.Timestamp updated_at = 3;
  // Entity type to be linked to
  calixa.domain.common.EntityType shell_entity_type = 4;
}

message Folder {
  option (calixa.oltp.oltp_primary_key) = {field_ids: [999, 1]};
  string organization_id = 999 [(calixa.oltp.oltp_field) = {nullable: false}];
  string folder_id = 1 [(calixa.oltp.oltp_field) = {nullable: false}];
  string name = 2 [(calixa.oltp.oltp_field) = {nullable: false}];
  bool is_public = 3 [(calixa.oltp.oltp_field) = {nullable: false}];
  string description = 4 [(calixa.oltp.oltp_field) = {nullable: true}];
  google.protobuf.Timestamp created_at = 5 [(calixa.oltp.oltp_field) = {nullable: false}];
  google.protobuf.Timestamp updated_at = 6 [(calixa.oltp.oltp_field) = {nullable: false}];
  string created_by_organization_user_id = 7 [(calixa.oltp.oltp_field) = {nullable: false}];
  reserved 8; // google.protobuf.Timestamp deleted_at = 8;
}

service FolderService {
  rpc CreateFolder (PutFolderRequest) returns (Folder);
  rpc GetFolder (GetFolderRequest) returns (Folder);
  rpc GetFolders (GetFolderRequest) returns (stream Folder);
  rpc PutFolder (PutFolderRequest) returns (Folder);
  rpc DeleteFolder(DeleteFolderRequest) returns (google.protobuf.Empty);
  rpc PutFolderOrder (PutFolderOrderRequest) returns (FolderOrder);
}

message GetFolderRequest {
  // If folder_id is specified, the specific folder is returned; otherwise
  // all folders are returned for the specified organization.
  string folder_id = 1;
}

message PutFolderRequest {
  Folder folder = 1;
}

message DeleteFolderRequest {
  string folder_id = 1;
}

message FolderOrder {
  option (calixa.oltp.oltp_primary_key) = {field_ids: [1]};
  string organization_id = 1 ;
  repeated string folder_ids = 2 [(calixa.oltp.oltp_field) = {}];
  google.protobuf.Timestamp created_at = 3 [(calixa.oltp.oltp_field) = {nullable: false}];
  google.protobuf.Timestamp updated_at = 4 [(calixa.oltp.oltp_field) = {nullable: false}];
}

message PutFolderOrderRequest {
  FolderOrder folder_order = 1;
}

message InboxSettings {
  repeated calixa.domain.entitypane.InboxColumn columns = 1;
  // Allowing Company or Account only:
  calixa.domain.common.EntityType entity_type = 2;
}
