# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/05_viz.ipynb.

# %% auto 0
__all__ = ['plot_timeline', 'plot_countries']

# %% ../nbs/05_viz.ipynb 4
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from fastcore.all import *


# %% ../nbs/05_viz.ipynb 5
def plot_timeline(
    df,
    filename=None
):
    """
    """
    fig = plt.figure(figsize=(10,6))
    grouped = df.groupby('published')
    df_yearly = grouped.size().sort_index()
    df_cum_yearly = grouped['pubmed'].count().cumsum()
    df_sum = pd.DataFrame(df_yearly).join(pd.DataFrame(df_cum_yearly)).reset_index()
    df_sum.columns = ['Year','Yearly', 'Cummulative']
    df_sum['Year'] = df_sum['Year'].astype('int')
    sns.lineplot(x='Year',y = 'Yearly',data=df_sum[df_sum['Year']>=2000])
    sns.lineplot(x='Year',y = 'Cummulative',data=df_sum[df_sum['Year']>=2000])
    plt.xlabel('Year')
    plt.ylabel('Number of articles')
    plt.title('Timeline for Article published')
    if filename is not None:
        plt.savefig(filename)
    else:
        plt.show()
    return fig

# %% ../nbs/05_viz.ipynb 6
def plot_countries(
    df_det, 
    filename=None
):
    """
    """
    plt.figure(figsize=(10, 6))
    df_countries = df_det.groupby('countries').size().sort_values().reset_index()
    df_countries.columns = ['Country', 'Authors']
    sns.catplot(x='Authors', y='Country', kind='bar', data=df_countries, palette='Blues')
    if filename is not None:
        plt.savefig(filename)
    else:
        plt.show()
