# coding: utf-8

"""
    Sonatype Nexus IQ Server

    This documents the available APIs into [Sonatype Nexus IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management) (also knwon as Nexus Lifecycle).   # noqa: E501

    OpenAPI spec version: 156
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class ApiFirewallQuarantineSummaryDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "repository_count": "int",
        "quarantine_enabled_repository_count": "int",
        "quarantine_enabled": "bool",
        "total_component_count": "int",
        "quarantined_component_count": "int",
    }

    attribute_map = {
        "repository_count": "repositoryCount",
        "quarantine_enabled_repository_count": "quarantineEnabledRepositoryCount",
        "quarantine_enabled": "quarantineEnabled",
        "total_component_count": "totalComponentCount",
        "quarantined_component_count": "quarantinedComponentCount",
    }

    def __init__(
        self,
        repository_count=None,
        quarantine_enabled_repository_count=None,
        quarantine_enabled=None,
        total_component_count=None,
        quarantined_component_count=None,
    ):  # noqa: E501
        """ApiFirewallQuarantineSummaryDTO - a model defined in Swagger"""  # noqa: E501
        self._repository_count = None
        self._quarantine_enabled_repository_count = None
        self._quarantine_enabled = None
        self._total_component_count = None
        self._quarantined_component_count = None
        self.discriminator = None
        if repository_count is not None:
            self.repository_count = repository_count
        if quarantine_enabled_repository_count is not None:
            self.quarantine_enabled_repository_count = (
                quarantine_enabled_repository_count
            )
        if quarantine_enabled is not None:
            self.quarantine_enabled = quarantine_enabled
        if total_component_count is not None:
            self.total_component_count = total_component_count
        if quarantined_component_count is not None:
            self.quarantined_component_count = quarantined_component_count

    @property
    def repository_count(self):
        """Gets the repository_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501


        :return: The repository_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :rtype: int
        """
        return self._repository_count

    @repository_count.setter
    def repository_count(self, repository_count):
        """Sets the repository_count of this ApiFirewallQuarantineSummaryDTO.


        :param repository_count: The repository_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :type: int
        """

        self._repository_count = repository_count

    @property
    def quarantine_enabled_repository_count(self):
        """Gets the quarantine_enabled_repository_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501


        :return: The quarantine_enabled_repository_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :rtype: int
        """
        return self._quarantine_enabled_repository_count

    @quarantine_enabled_repository_count.setter
    def quarantine_enabled_repository_count(self, quarantine_enabled_repository_count):
        """Sets the quarantine_enabled_repository_count of this ApiFirewallQuarantineSummaryDTO.


        :param quarantine_enabled_repository_count: The quarantine_enabled_repository_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :type: int
        """

        self._quarantine_enabled_repository_count = quarantine_enabled_repository_count

    @property
    def quarantine_enabled(self):
        """Gets the quarantine_enabled of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501


        :return: The quarantine_enabled of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :rtype: bool
        """
        return self._quarantine_enabled

    @quarantine_enabled.setter
    def quarantine_enabled(self, quarantine_enabled):
        """Sets the quarantine_enabled of this ApiFirewallQuarantineSummaryDTO.


        :param quarantine_enabled: The quarantine_enabled of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :type: bool
        """

        self._quarantine_enabled = quarantine_enabled

    @property
    def total_component_count(self):
        """Gets the total_component_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501


        :return: The total_component_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :rtype: int
        """
        return self._total_component_count

    @total_component_count.setter
    def total_component_count(self, total_component_count):
        """Sets the total_component_count of this ApiFirewallQuarantineSummaryDTO.


        :param total_component_count: The total_component_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :type: int
        """

        self._total_component_count = total_component_count

    @property
    def quarantined_component_count(self):
        """Gets the quarantined_component_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501


        :return: The quarantined_component_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :rtype: int
        """
        return self._quarantined_component_count

    @quarantined_component_count.setter
    def quarantined_component_count(self, quarantined_component_count):
        """Sets the quarantined_component_count of this ApiFirewallQuarantineSummaryDTO.


        :param quarantined_component_count: The quarantined_component_count of this ApiFirewallQuarantineSummaryDTO.  # noqa: E501
        :type: int
        """

        self._quarantined_component_count = quarantined_component_count

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(ApiFirewallQuarantineSummaryDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiFirewallQuarantineSummaryDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
