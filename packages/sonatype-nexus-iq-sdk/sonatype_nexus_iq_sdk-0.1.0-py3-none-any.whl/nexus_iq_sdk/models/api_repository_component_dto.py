# coding: utf-8

"""
    Sonatype Nexus IQ Server

    This documents the available APIs into [Sonatype Nexus IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management) (also knwon as Nexus Lifecycle).   # noqa: E501

    OpenAPI spec version: 156
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class ApiRepositoryComponentDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "package_url": "str",
        "hash": "str",
        "sha256": "str",
        "component_identifier": "ApiComponentIdentifierDTOV2",
        "display_name": "str",
        "third_party": "bool",
        "quarantine_id": "str",
        "quarantine_time": "datetime",
        "quarantine_release_time": "datetime",
    }

    attribute_map = {
        "package_url": "packageUrl",
        "hash": "hash",
        "sha256": "sha256",
        "component_identifier": "componentIdentifier",
        "display_name": "displayName",
        "third_party": "thirdParty",
        "quarantine_id": "quarantineId",
        "quarantine_time": "quarantineTime",
        "quarantine_release_time": "quarantineReleaseTime",
    }

    def __init__(
        self,
        package_url=None,
        hash=None,
        sha256=None,
        component_identifier=None,
        display_name=None,
        third_party=None,
        quarantine_id=None,
        quarantine_time=None,
        quarantine_release_time=None,
    ):  # noqa: E501
        """ApiRepositoryComponentDTO - a model defined in Swagger"""  # noqa: E501
        self._package_url = None
        self._hash = None
        self._sha256 = None
        self._component_identifier = None
        self._display_name = None
        self._third_party = None
        self._quarantine_id = None
        self._quarantine_time = None
        self._quarantine_release_time = None
        self.discriminator = None
        if package_url is not None:
            self.package_url = package_url
        if hash is not None:
            self.hash = hash
        if sha256 is not None:
            self.sha256 = sha256
        if component_identifier is not None:
            self.component_identifier = component_identifier
        if display_name is not None:
            self.display_name = display_name
        if third_party is not None:
            self.third_party = third_party
        if quarantine_id is not None:
            self.quarantine_id = quarantine_id
        if quarantine_time is not None:
            self.quarantine_time = quarantine_time
        if quarantine_release_time is not None:
            self.quarantine_release_time = quarantine_release_time

    @property
    def package_url(self):
        """Gets the package_url of this ApiRepositoryComponentDTO.  # noqa: E501


        :return: The package_url of this ApiRepositoryComponentDTO.  # noqa: E501
        :rtype: str
        """
        return self._package_url

    @package_url.setter
    def package_url(self, package_url):
        """Sets the package_url of this ApiRepositoryComponentDTO.


        :param package_url: The package_url of this ApiRepositoryComponentDTO.  # noqa: E501
        :type: str
        """

        self._package_url = package_url

    @property
    def hash(self):
        """Gets the hash of this ApiRepositoryComponentDTO.  # noqa: E501


        :return: The hash of this ApiRepositoryComponentDTO.  # noqa: E501
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this ApiRepositoryComponentDTO.


        :param hash: The hash of this ApiRepositoryComponentDTO.  # noqa: E501
        :type: str
        """

        self._hash = hash

    @property
    def sha256(self):
        """Gets the sha256 of this ApiRepositoryComponentDTO.  # noqa: E501


        :return: The sha256 of this ApiRepositoryComponentDTO.  # noqa: E501
        :rtype: str
        """
        return self._sha256

    @sha256.setter
    def sha256(self, sha256):
        """Sets the sha256 of this ApiRepositoryComponentDTO.


        :param sha256: The sha256 of this ApiRepositoryComponentDTO.  # noqa: E501
        :type: str
        """

        self._sha256 = sha256

    @property
    def component_identifier(self):
        """Gets the component_identifier of this ApiRepositoryComponentDTO.  # noqa: E501


        :return: The component_identifier of this ApiRepositoryComponentDTO.  # noqa: E501
        :rtype: ApiComponentIdentifierDTOV2
        """
        return self._component_identifier

    @component_identifier.setter
    def component_identifier(self, component_identifier):
        """Sets the component_identifier of this ApiRepositoryComponentDTO.


        :param component_identifier: The component_identifier of this ApiRepositoryComponentDTO.  # noqa: E501
        :type: ApiComponentIdentifierDTOV2
        """

        self._component_identifier = component_identifier

    @property
    def display_name(self):
        """Gets the display_name of this ApiRepositoryComponentDTO.  # noqa: E501


        :return: The display_name of this ApiRepositoryComponentDTO.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ApiRepositoryComponentDTO.


        :param display_name: The display_name of this ApiRepositoryComponentDTO.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def third_party(self):
        """Gets the third_party of this ApiRepositoryComponentDTO.  # noqa: E501


        :return: The third_party of this ApiRepositoryComponentDTO.  # noqa: E501
        :rtype: bool
        """
        return self._third_party

    @third_party.setter
    def third_party(self, third_party):
        """Sets the third_party of this ApiRepositoryComponentDTO.


        :param third_party: The third_party of this ApiRepositoryComponentDTO.  # noqa: E501
        :type: bool
        """

        self._third_party = third_party

    @property
    def quarantine_id(self):
        """Gets the quarantine_id of this ApiRepositoryComponentDTO.  # noqa: E501


        :return: The quarantine_id of this ApiRepositoryComponentDTO.  # noqa: E501
        :rtype: str
        """
        return self._quarantine_id

    @quarantine_id.setter
    def quarantine_id(self, quarantine_id):
        """Sets the quarantine_id of this ApiRepositoryComponentDTO.


        :param quarantine_id: The quarantine_id of this ApiRepositoryComponentDTO.  # noqa: E501
        :type: str
        """

        self._quarantine_id = quarantine_id

    @property
    def quarantine_time(self):
        """Gets the quarantine_time of this ApiRepositoryComponentDTO.  # noqa: E501


        :return: The quarantine_time of this ApiRepositoryComponentDTO.  # noqa: E501
        :rtype: datetime
        """
        return self._quarantine_time

    @quarantine_time.setter
    def quarantine_time(self, quarantine_time):
        """Sets the quarantine_time of this ApiRepositoryComponentDTO.


        :param quarantine_time: The quarantine_time of this ApiRepositoryComponentDTO.  # noqa: E501
        :type: datetime
        """

        self._quarantine_time = quarantine_time

    @property
    def quarantine_release_time(self):
        """Gets the quarantine_release_time of this ApiRepositoryComponentDTO.  # noqa: E501


        :return: The quarantine_release_time of this ApiRepositoryComponentDTO.  # noqa: E501
        :rtype: datetime
        """
        return self._quarantine_release_time

    @quarantine_release_time.setter
    def quarantine_release_time(self, quarantine_release_time):
        """Sets the quarantine_release_time of this ApiRepositoryComponentDTO.


        :param quarantine_release_time: The quarantine_release_time of this ApiRepositoryComponentDTO.  # noqa: E501
        :type: datetime
        """

        self._quarantine_release_time = quarantine_release_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(ApiRepositoryComponentDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiRepositoryComponentDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
