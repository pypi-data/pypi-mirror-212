# coding: utf-8

"""
    Sonatype Nexus IQ Server

    This documents the available APIs into [Sonatype Nexus IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management) (also knwon as Nexus Lifecycle).   # noqa: E501

    OpenAPI spec version: 156
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class ApiSamlConfigurationDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "identity_provider_name": "str",
        "entity_id": "str",
        "first_name_attribute_name": "str",
        "last_name_attribute_name": "str",
        "email_attribute_name": "str",
        "username_attribute_name": "str",
        "groups_attribute_name": "str",
        "validate_response_signature": "bool",
        "validate_assertion_signature": "bool",
    }

    attribute_map = {
        "identity_provider_name": "identityProviderName",
        "entity_id": "entityId",
        "first_name_attribute_name": "firstNameAttributeName",
        "last_name_attribute_name": "lastNameAttributeName",
        "email_attribute_name": "emailAttributeName",
        "username_attribute_name": "usernameAttributeName",
        "groups_attribute_name": "groupsAttributeName",
        "validate_response_signature": "validateResponseSignature",
        "validate_assertion_signature": "validateAssertionSignature",
    }

    def __init__(
        self,
        identity_provider_name=None,
        entity_id=None,
        first_name_attribute_name=None,
        last_name_attribute_name=None,
        email_attribute_name=None,
        username_attribute_name=None,
        groups_attribute_name=None,
        validate_response_signature=None,
        validate_assertion_signature=None,
    ):  # noqa: E501
        """ApiSamlConfigurationDTO - a model defined in Swagger"""  # noqa: E501
        self._identity_provider_name = None
        self._entity_id = None
        self._first_name_attribute_name = None
        self._last_name_attribute_name = None
        self._email_attribute_name = None
        self._username_attribute_name = None
        self._groups_attribute_name = None
        self._validate_response_signature = None
        self._validate_assertion_signature = None
        self.discriminator = None
        if identity_provider_name is not None:
            self.identity_provider_name = identity_provider_name
        if entity_id is not None:
            self.entity_id = entity_id
        if first_name_attribute_name is not None:
            self.first_name_attribute_name = first_name_attribute_name
        if last_name_attribute_name is not None:
            self.last_name_attribute_name = last_name_attribute_name
        if email_attribute_name is not None:
            self.email_attribute_name = email_attribute_name
        if username_attribute_name is not None:
            self.username_attribute_name = username_attribute_name
        if groups_attribute_name is not None:
            self.groups_attribute_name = groups_attribute_name
        if validate_response_signature is not None:
            self.validate_response_signature = validate_response_signature
        if validate_assertion_signature is not None:
            self.validate_assertion_signature = validate_assertion_signature

    @property
    def identity_provider_name(self):
        """Gets the identity_provider_name of this ApiSamlConfigurationDTO.  # noqa: E501


        :return: The identity_provider_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :rtype: str
        """
        return self._identity_provider_name

    @identity_provider_name.setter
    def identity_provider_name(self, identity_provider_name):
        """Sets the identity_provider_name of this ApiSamlConfigurationDTO.


        :param identity_provider_name: The identity_provider_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :type: str
        """

        self._identity_provider_name = identity_provider_name

    @property
    def entity_id(self):
        """Gets the entity_id of this ApiSamlConfigurationDTO.  # noqa: E501


        :return: The entity_id of this ApiSamlConfigurationDTO.  # noqa: E501
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this ApiSamlConfigurationDTO.


        :param entity_id: The entity_id of this ApiSamlConfigurationDTO.  # noqa: E501
        :type: str
        """

        self._entity_id = entity_id

    @property
    def first_name_attribute_name(self):
        """Gets the first_name_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501


        :return: The first_name_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :rtype: str
        """
        return self._first_name_attribute_name

    @first_name_attribute_name.setter
    def first_name_attribute_name(self, first_name_attribute_name):
        """Sets the first_name_attribute_name of this ApiSamlConfigurationDTO.


        :param first_name_attribute_name: The first_name_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :type: str
        """

        self._first_name_attribute_name = first_name_attribute_name

    @property
    def last_name_attribute_name(self):
        """Gets the last_name_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501


        :return: The last_name_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :rtype: str
        """
        return self._last_name_attribute_name

    @last_name_attribute_name.setter
    def last_name_attribute_name(self, last_name_attribute_name):
        """Sets the last_name_attribute_name of this ApiSamlConfigurationDTO.


        :param last_name_attribute_name: The last_name_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :type: str
        """

        self._last_name_attribute_name = last_name_attribute_name

    @property
    def email_attribute_name(self):
        """Gets the email_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501


        :return: The email_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :rtype: str
        """
        return self._email_attribute_name

    @email_attribute_name.setter
    def email_attribute_name(self, email_attribute_name):
        """Sets the email_attribute_name of this ApiSamlConfigurationDTO.


        :param email_attribute_name: The email_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :type: str
        """

        self._email_attribute_name = email_attribute_name

    @property
    def username_attribute_name(self):
        """Gets the username_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501


        :return: The username_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :rtype: str
        """
        return self._username_attribute_name

    @username_attribute_name.setter
    def username_attribute_name(self, username_attribute_name):
        """Sets the username_attribute_name of this ApiSamlConfigurationDTO.


        :param username_attribute_name: The username_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :type: str
        """

        self._username_attribute_name = username_attribute_name

    @property
    def groups_attribute_name(self):
        """Gets the groups_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501


        :return: The groups_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :rtype: str
        """
        return self._groups_attribute_name

    @groups_attribute_name.setter
    def groups_attribute_name(self, groups_attribute_name):
        """Sets the groups_attribute_name of this ApiSamlConfigurationDTO.


        :param groups_attribute_name: The groups_attribute_name of this ApiSamlConfigurationDTO.  # noqa: E501
        :type: str
        """

        self._groups_attribute_name = groups_attribute_name

    @property
    def validate_response_signature(self):
        """Gets the validate_response_signature of this ApiSamlConfigurationDTO.  # noqa: E501


        :return: The validate_response_signature of this ApiSamlConfigurationDTO.  # noqa: E501
        :rtype: bool
        """
        return self._validate_response_signature

    @validate_response_signature.setter
    def validate_response_signature(self, validate_response_signature):
        """Sets the validate_response_signature of this ApiSamlConfigurationDTO.


        :param validate_response_signature: The validate_response_signature of this ApiSamlConfigurationDTO.  # noqa: E501
        :type: bool
        """

        self._validate_response_signature = validate_response_signature

    @property
    def validate_assertion_signature(self):
        """Gets the validate_assertion_signature of this ApiSamlConfigurationDTO.  # noqa: E501


        :return: The validate_assertion_signature of this ApiSamlConfigurationDTO.  # noqa: E501
        :rtype: bool
        """
        return self._validate_assertion_signature

    @validate_assertion_signature.setter
    def validate_assertion_signature(self, validate_assertion_signature):
        """Sets the validate_assertion_signature of this ApiSamlConfigurationDTO.


        :param validate_assertion_signature: The validate_assertion_signature of this ApiSamlConfigurationDTO.  # noqa: E501
        :type: bool
        """

        self._validate_assertion_signature = validate_assertion_signature

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(ApiSamlConfigurationDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiSamlConfigurationDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
