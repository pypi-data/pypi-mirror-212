# coding: utf-8

"""
    Sonatype Nexus IQ Server

    This documents the available APIs into [Sonatype Nexus IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management) (also knwon as Nexus Lifecycle).   # noqa: E501

    OpenAPI spec version: 156
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class SearchResultItemDTO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "item_type": "str",
        "organization_id": "str",
        "organization_name": "str",
        "application_id": "str",
        "application_public_id": "str",
        "application_name": "str",
        "policy_evaluation_stage": "str",
        "report_id": "str",
        "component_hash": "str",
        "component_identifier": "ApiComponentIdentifierDTOV2",
        "component_name": "str",
        "vulnerability_id": "str",
        "vulnerability_description": "str",
        "vulnerability_status": "str",
        "application_category_id": "str",
        "application_category_name": "str",
        "application_category_color": "str",
        "application_category_description": "str",
        "component_label_id": "str",
        "component_label_name": "str",
        "component_label_color": "str",
        "component_label_description": "str",
        "policy_id": "str",
        "policy_name": "str",
        "policy_threat_category": "str",
        "policy_threat_level": "int",
        "result_index": "int",
    }

    attribute_map = {
        "item_type": "itemType",
        "organization_id": "organizationId",
        "organization_name": "organizationName",
        "application_id": "applicationId",
        "application_public_id": "applicationPublicId",
        "application_name": "applicationName",
        "policy_evaluation_stage": "policyEvaluationStage",
        "report_id": "reportId",
        "component_hash": "componentHash",
        "component_identifier": "componentIdentifier",
        "component_name": "componentName",
        "vulnerability_id": "vulnerabilityId",
        "vulnerability_description": "vulnerabilityDescription",
        "vulnerability_status": "vulnerabilityStatus",
        "application_category_id": "applicationCategoryId",
        "application_category_name": "applicationCategoryName",
        "application_category_color": "applicationCategoryColor",
        "application_category_description": "applicationCategoryDescription",
        "component_label_id": "componentLabelId",
        "component_label_name": "componentLabelName",
        "component_label_color": "componentLabelColor",
        "component_label_description": "componentLabelDescription",
        "policy_id": "policyId",
        "policy_name": "policyName",
        "policy_threat_category": "policyThreatCategory",
        "policy_threat_level": "policyThreatLevel",
        "result_index": "resultIndex",
    }

    def __init__(
        self,
        item_type=None,
        organization_id=None,
        organization_name=None,
        application_id=None,
        application_public_id=None,
        application_name=None,
        policy_evaluation_stage=None,
        report_id=None,
        component_hash=None,
        component_identifier=None,
        component_name=None,
        vulnerability_id=None,
        vulnerability_description=None,
        vulnerability_status=None,
        application_category_id=None,
        application_category_name=None,
        application_category_color=None,
        application_category_description=None,
        component_label_id=None,
        component_label_name=None,
        component_label_color=None,
        component_label_description=None,
        policy_id=None,
        policy_name=None,
        policy_threat_category=None,
        policy_threat_level=None,
        result_index=None,
    ):  # noqa: E501
        """SearchResultItemDTO - a model defined in Swagger"""  # noqa: E501
        self._item_type = None
        self._organization_id = None
        self._organization_name = None
        self._application_id = None
        self._application_public_id = None
        self._application_name = None
        self._policy_evaluation_stage = None
        self._report_id = None
        self._component_hash = None
        self._component_identifier = None
        self._component_name = None
        self._vulnerability_id = None
        self._vulnerability_description = None
        self._vulnerability_status = None
        self._application_category_id = None
        self._application_category_name = None
        self._application_category_color = None
        self._application_category_description = None
        self._component_label_id = None
        self._component_label_name = None
        self._component_label_color = None
        self._component_label_description = None
        self._policy_id = None
        self._policy_name = None
        self._policy_threat_category = None
        self._policy_threat_level = None
        self._result_index = None
        self.discriminator = None
        if item_type is not None:
            self.item_type = item_type
        if organization_id is not None:
            self.organization_id = organization_id
        if organization_name is not None:
            self.organization_name = organization_name
        if application_id is not None:
            self.application_id = application_id
        if application_public_id is not None:
            self.application_public_id = application_public_id
        if application_name is not None:
            self.application_name = application_name
        if policy_evaluation_stage is not None:
            self.policy_evaluation_stage = policy_evaluation_stage
        if report_id is not None:
            self.report_id = report_id
        if component_hash is not None:
            self.component_hash = component_hash
        if component_identifier is not None:
            self.component_identifier = component_identifier
        if component_name is not None:
            self.component_name = component_name
        if vulnerability_id is not None:
            self.vulnerability_id = vulnerability_id
        if vulnerability_description is not None:
            self.vulnerability_description = vulnerability_description
        if vulnerability_status is not None:
            self.vulnerability_status = vulnerability_status
        if application_category_id is not None:
            self.application_category_id = application_category_id
        if application_category_name is not None:
            self.application_category_name = application_category_name
        if application_category_color is not None:
            self.application_category_color = application_category_color
        if application_category_description is not None:
            self.application_category_description = application_category_description
        if component_label_id is not None:
            self.component_label_id = component_label_id
        if component_label_name is not None:
            self.component_label_name = component_label_name
        if component_label_color is not None:
            self.component_label_color = component_label_color
        if component_label_description is not None:
            self.component_label_description = component_label_description
        if policy_id is not None:
            self.policy_id = policy_id
        if policy_name is not None:
            self.policy_name = policy_name
        if policy_threat_category is not None:
            self.policy_threat_category = policy_threat_category
        if policy_threat_level is not None:
            self.policy_threat_level = policy_threat_level
        if result_index is not None:
            self.result_index = result_index

    @property
    def item_type(self):
        """Gets the item_type of this SearchResultItemDTO.  # noqa: E501


        :return: The item_type of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._item_type

    @item_type.setter
    def item_type(self, item_type):
        """Sets the item_type of this SearchResultItemDTO.


        :param item_type: The item_type of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._item_type = item_type

    @property
    def organization_id(self):
        """Gets the organization_id of this SearchResultItemDTO.  # noqa: E501


        :return: The organization_id of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this SearchResultItemDTO.


        :param organization_id: The organization_id of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._organization_id = organization_id

    @property
    def organization_name(self):
        """Gets the organization_name of this SearchResultItemDTO.  # noqa: E501


        :return: The organization_name of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._organization_name

    @organization_name.setter
    def organization_name(self, organization_name):
        """Sets the organization_name of this SearchResultItemDTO.


        :param organization_name: The organization_name of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._organization_name = organization_name

    @property
    def application_id(self):
        """Gets the application_id of this SearchResultItemDTO.  # noqa: E501


        :return: The application_id of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this SearchResultItemDTO.


        :param application_id: The application_id of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._application_id = application_id

    @property
    def application_public_id(self):
        """Gets the application_public_id of this SearchResultItemDTO.  # noqa: E501


        :return: The application_public_id of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._application_public_id

    @application_public_id.setter
    def application_public_id(self, application_public_id):
        """Sets the application_public_id of this SearchResultItemDTO.


        :param application_public_id: The application_public_id of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._application_public_id = application_public_id

    @property
    def application_name(self):
        """Gets the application_name of this SearchResultItemDTO.  # noqa: E501


        :return: The application_name of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._application_name

    @application_name.setter
    def application_name(self, application_name):
        """Sets the application_name of this SearchResultItemDTO.


        :param application_name: The application_name of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._application_name = application_name

    @property
    def policy_evaluation_stage(self):
        """Gets the policy_evaluation_stage of this SearchResultItemDTO.  # noqa: E501


        :return: The policy_evaluation_stage of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._policy_evaluation_stage

    @policy_evaluation_stage.setter
    def policy_evaluation_stage(self, policy_evaluation_stage):
        """Sets the policy_evaluation_stage of this SearchResultItemDTO.


        :param policy_evaluation_stage: The policy_evaluation_stage of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._policy_evaluation_stage = policy_evaluation_stage

    @property
    def report_id(self):
        """Gets the report_id of this SearchResultItemDTO.  # noqa: E501


        :return: The report_id of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._report_id

    @report_id.setter
    def report_id(self, report_id):
        """Sets the report_id of this SearchResultItemDTO.


        :param report_id: The report_id of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._report_id = report_id

    @property
    def component_hash(self):
        """Gets the component_hash of this SearchResultItemDTO.  # noqa: E501


        :return: The component_hash of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._component_hash

    @component_hash.setter
    def component_hash(self, component_hash):
        """Sets the component_hash of this SearchResultItemDTO.


        :param component_hash: The component_hash of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._component_hash = component_hash

    @property
    def component_identifier(self):
        """Gets the component_identifier of this SearchResultItemDTO.  # noqa: E501


        :return: The component_identifier of this SearchResultItemDTO.  # noqa: E501
        :rtype: ApiComponentIdentifierDTOV2
        """
        return self._component_identifier

    @component_identifier.setter
    def component_identifier(self, component_identifier):
        """Sets the component_identifier of this SearchResultItemDTO.


        :param component_identifier: The component_identifier of this SearchResultItemDTO.  # noqa: E501
        :type: ApiComponentIdentifierDTOV2
        """

        self._component_identifier = component_identifier

    @property
    def component_name(self):
        """Gets the component_name of this SearchResultItemDTO.  # noqa: E501


        :return: The component_name of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._component_name

    @component_name.setter
    def component_name(self, component_name):
        """Sets the component_name of this SearchResultItemDTO.


        :param component_name: The component_name of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._component_name = component_name

    @property
    def vulnerability_id(self):
        """Gets the vulnerability_id of this SearchResultItemDTO.  # noqa: E501


        :return: The vulnerability_id of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._vulnerability_id

    @vulnerability_id.setter
    def vulnerability_id(self, vulnerability_id):
        """Sets the vulnerability_id of this SearchResultItemDTO.


        :param vulnerability_id: The vulnerability_id of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._vulnerability_id = vulnerability_id

    @property
    def vulnerability_description(self):
        """Gets the vulnerability_description of this SearchResultItemDTO.  # noqa: E501


        :return: The vulnerability_description of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._vulnerability_description

    @vulnerability_description.setter
    def vulnerability_description(self, vulnerability_description):
        """Sets the vulnerability_description of this SearchResultItemDTO.


        :param vulnerability_description: The vulnerability_description of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._vulnerability_description = vulnerability_description

    @property
    def vulnerability_status(self):
        """Gets the vulnerability_status of this SearchResultItemDTO.  # noqa: E501


        :return: The vulnerability_status of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._vulnerability_status

    @vulnerability_status.setter
    def vulnerability_status(self, vulnerability_status):
        """Sets the vulnerability_status of this SearchResultItemDTO.


        :param vulnerability_status: The vulnerability_status of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._vulnerability_status = vulnerability_status

    @property
    def application_category_id(self):
        """Gets the application_category_id of this SearchResultItemDTO.  # noqa: E501


        :return: The application_category_id of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._application_category_id

    @application_category_id.setter
    def application_category_id(self, application_category_id):
        """Sets the application_category_id of this SearchResultItemDTO.


        :param application_category_id: The application_category_id of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._application_category_id = application_category_id

    @property
    def application_category_name(self):
        """Gets the application_category_name of this SearchResultItemDTO.  # noqa: E501


        :return: The application_category_name of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._application_category_name

    @application_category_name.setter
    def application_category_name(self, application_category_name):
        """Sets the application_category_name of this SearchResultItemDTO.


        :param application_category_name: The application_category_name of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._application_category_name = application_category_name

    @property
    def application_category_color(self):
        """Gets the application_category_color of this SearchResultItemDTO.  # noqa: E501


        :return: The application_category_color of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._application_category_color

    @application_category_color.setter
    def application_category_color(self, application_category_color):
        """Sets the application_category_color of this SearchResultItemDTO.


        :param application_category_color: The application_category_color of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._application_category_color = application_category_color

    @property
    def application_category_description(self):
        """Gets the application_category_description of this SearchResultItemDTO.  # noqa: E501


        :return: The application_category_description of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._application_category_description

    @application_category_description.setter
    def application_category_description(self, application_category_description):
        """Sets the application_category_description of this SearchResultItemDTO.


        :param application_category_description: The application_category_description of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._application_category_description = application_category_description

    @property
    def component_label_id(self):
        """Gets the component_label_id of this SearchResultItemDTO.  # noqa: E501


        :return: The component_label_id of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._component_label_id

    @component_label_id.setter
    def component_label_id(self, component_label_id):
        """Sets the component_label_id of this SearchResultItemDTO.


        :param component_label_id: The component_label_id of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._component_label_id = component_label_id

    @property
    def component_label_name(self):
        """Gets the component_label_name of this SearchResultItemDTO.  # noqa: E501


        :return: The component_label_name of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._component_label_name

    @component_label_name.setter
    def component_label_name(self, component_label_name):
        """Sets the component_label_name of this SearchResultItemDTO.


        :param component_label_name: The component_label_name of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._component_label_name = component_label_name

    @property
    def component_label_color(self):
        """Gets the component_label_color of this SearchResultItemDTO.  # noqa: E501


        :return: The component_label_color of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._component_label_color

    @component_label_color.setter
    def component_label_color(self, component_label_color):
        """Sets the component_label_color of this SearchResultItemDTO.


        :param component_label_color: The component_label_color of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._component_label_color = component_label_color

    @property
    def component_label_description(self):
        """Gets the component_label_description of this SearchResultItemDTO.  # noqa: E501


        :return: The component_label_description of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._component_label_description

    @component_label_description.setter
    def component_label_description(self, component_label_description):
        """Sets the component_label_description of this SearchResultItemDTO.


        :param component_label_description: The component_label_description of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._component_label_description = component_label_description

    @property
    def policy_id(self):
        """Gets the policy_id of this SearchResultItemDTO.  # noqa: E501


        :return: The policy_id of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._policy_id

    @policy_id.setter
    def policy_id(self, policy_id):
        """Sets the policy_id of this SearchResultItemDTO.


        :param policy_id: The policy_id of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._policy_id = policy_id

    @property
    def policy_name(self):
        """Gets the policy_name of this SearchResultItemDTO.  # noqa: E501


        :return: The policy_name of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this SearchResultItemDTO.


        :param policy_name: The policy_name of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._policy_name = policy_name

    @property
    def policy_threat_category(self):
        """Gets the policy_threat_category of this SearchResultItemDTO.  # noqa: E501


        :return: The policy_threat_category of this SearchResultItemDTO.  # noqa: E501
        :rtype: str
        """
        return self._policy_threat_category

    @policy_threat_category.setter
    def policy_threat_category(self, policy_threat_category):
        """Sets the policy_threat_category of this SearchResultItemDTO.


        :param policy_threat_category: The policy_threat_category of this SearchResultItemDTO.  # noqa: E501
        :type: str
        """

        self._policy_threat_category = policy_threat_category

    @property
    def policy_threat_level(self):
        """Gets the policy_threat_level of this SearchResultItemDTO.  # noqa: E501


        :return: The policy_threat_level of this SearchResultItemDTO.  # noqa: E501
        :rtype: int
        """
        return self._policy_threat_level

    @policy_threat_level.setter
    def policy_threat_level(self, policy_threat_level):
        """Sets the policy_threat_level of this SearchResultItemDTO.


        :param policy_threat_level: The policy_threat_level of this SearchResultItemDTO.  # noqa: E501
        :type: int
        """

        self._policy_threat_level = policy_threat_level

    @property
    def result_index(self):
        """Gets the result_index of this SearchResultItemDTO.  # noqa: E501


        :return: The result_index of this SearchResultItemDTO.  # noqa: E501
        :rtype: int
        """
        return self._result_index

    @result_index.setter
    def result_index(self, result_index):
        """Sets the result_index of this SearchResultItemDTO.


        :param result_index: The result_index of this SearchResultItemDTO.  # noqa: E501
        :type: int
        """

        self._result_index = result_index

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(SearchResultItemDTO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SearchResultItemDTO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
