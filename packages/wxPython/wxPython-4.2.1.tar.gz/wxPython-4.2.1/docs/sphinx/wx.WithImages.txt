.. wxPython Phoenix documentation

   This file was generated by Phoenix's sphinx generator and associated
   tools, do not edit by hand.

   Copyright: (c) 2011-2020 by Total Control Software
   License:   wxWindows License

.. include:: headings.inc



.. _wx.WithImages:

==========================================================================================================================================
|phoenix_title|  **wx.WithImages**
==========================================================================================================================================

A mixin class to be used with other classes that use a :ref:`wx.ImageList`.          

This class is used by classes such as :ref:`wx.Notebook`  and :ref:`wx.TreeCtrl`, that use image indices to specify the icons used for their items (page icons for the former or the items inside the control for the latter). 

The icon index can either be a special value ``wx.NO_IMAGE`` to indicate that an item doesn't use an image at all or a small positive integer to specify the index of the icon in the list of images maintained by this class. Note that for many controls, either none of the items should have an icon or all of them should have one, i.e. mixing the items with and without an icon doesn't always work well and may result in less than ideal appearance. 

To initialize the list of icons used, call :meth:`~wx.WithImages.SetImages`  method passing it a vector of :ref:`wx.BitmapBundle`  objects which can, in the simplest case, be just :ref:`wx.Bitmap`  or :ref:`wx.Icon`  objects â€“  however, as always with :ref:`wx.BitmapBundle`, either more than one bitmap or icon needs to be specified or the bitmap bundle needs to be created from ``SVG`` to obtain better appearance in high ``DPI``. 

Alternative, traditional API which was the only one available until wxWidgets 3.1.6, is based on the use of :ref:`wx.ImageList`  class. To use it, you need to create an object of this class and then call either :meth:`~wx.WithImages.AssignImageList`  to set this image list and give the control its ownership or :meth:`~wx.WithImages.SetImageList`  to retain the ownership of the image list, which can be useful if the same image list is shared by multiple controls, but requires deleting the image list later. 

         



.. note:: 

   ImageList-based API is not formally deprecated, but its use is discouraged because it is more complicated than simply providing a vector of bitmaps and it doesn't allow specifying multiple images or using ``SVG``, which is required for good high ``DPI`` support. Please don't use :meth:`AssignImageList`   and :meth:`SetImageList`   in the new code and use :meth:`SetImages`   instead.   







|

|class_hierarchy| Class Hierarchy
=================================

.. raw:: html

   <div id="toggleBlock" onclick="return toggleVisibility(this)" class="closed" style="cursor:pointer;">
   <img id="toggleBlock-trigger" src="_static/images/closed.png"/>
   Inheritance diagram for class <strong>WithImages</strong>:
   </div>
   <div id="toggleBlock-summary" style="display:block;"></div>
   <div id="toggleBlock-content" style="display:none;">
   <p class="graphviz">
   <center><img src="_static/images/inheritance/wx.WithImages_inheritance.png" alt="Inheritance diagram of WithImages" usemap="#dummy" class="inheritance"/></center>
   <script type="text/javascript">toggleVisibilityOnLoad(document.getElementById('toggleBlock'))</script>
   <map id="dummy" name="dummy"> <area shape="rect" id="node1" href="wx.WithImages.html" title="wx.WithImages" alt="" coords="5,5,128,35"/> </map> 
   </p>
   </div>

|


|sub_classes| Known Subclasses
==============================

:ref:`wx.BookCtrlBase`, :ref:`wx.TreeCtrl`

|


|method_summary| Methods Summary
================================

================================================================================ ================================================================================
:meth:`~wx.WithImages.__init__`                                                  
:meth:`~wx.WithImages.AssignImageList`                                           Sets the image list for the page control and takes ownership of the list.
:meth:`~wx.WithImages.GetImageCount`                                             Return the number of images in this control.
:meth:`~wx.WithImages.GetImageList`                                              Returns the associated image list, may be ``None``.
:meth:`~wx.WithImages.GetUpdatedImageListFor`                                    Returns the image list updated to reflect the ``DPI`` scaling used for the given window if possible.
:meth:`~wx.WithImages.HasImages`                                                 Return ``True`` if the control has any images associated with it.
:meth:`~wx.WithImages.SetImageList`                                              Sets the image list to use.
:meth:`~wx.WithImages.SetImages`                                                 Set the images to use for the items in the control.
================================================================================ ================================================================================


|


|property_summary| Properties Summary
=====================================

================================================================================ ================================================================================
:attr:`~wx.WithImages.ImageCount`                                                See :meth:`~wx.WithImages.GetImageCount`
:attr:`~wx.WithImages.ImageList`                                                 See :meth:`~wx.WithImages.GetImageList` and :meth:`~wx.WithImages.SetImageList`
================================================================================ ================================================================================


|


|api| Class API
===============


.. class:: wx.WithImages(object)

   **Possible constructors**::

       WithImages()
       
   
   A mixin class to be used with other classes that use a ImageList.



   .. method:: __init__(self)






   .. method:: AssignImageList(self, imageList)

      Sets the image list for the page control and takes ownership of the list.                  

      This function exists for compatibility only, please use :meth:`SetImages`   in the new code. 

                


      :param `imageList`: 
      :type `imageList`: wx.ImageList






      .. seealso:: :ref:`wx.ImageList`, :meth:`SetImageList`     








   .. method:: GetImageCount(self)

      Return the number of images in this control.                  

      The returned value may be 0 if there are no images associated with the control. 

                

      :rtype: `int`







      .. versionadded:: 4.1/wxWidgets-3.1.6  
     







      .. seealso:: :meth:`HasImages`   








   .. method:: GetImageList(self)

      Returns the associated image list, may be ``None``.                  

      Note that the new code should use :meth:`GetUpdatedImageListFor`   instead. 

                

      :rtype: :ref:`wx.ImageList`







      .. seealso:: :ref:`wx.ImageList`, :meth:`SetImageList`     








   .. method:: GetUpdatedImageListFor(self, win)

      Returns the image list updated to reflect the ``DPI`` scaling used for the given window if possible.                  

      If :meth:`SetImages`   has been called, this function creates the image list containing the images using the ``DPI`` scaling in effect for the provided `win`, which must be valid. 

      Otherwise it behaves as :meth:`GetImageList` , i.e. returns the image list previously set using :meth:`SetImageList`   or :meth:`AssignImageList` , and just returns ``None`` if none of them had been called. 

                


      :param `win`: 
      :type `win`: wx.Window




      :rtype: :ref:`wx.ImageList`







      :returns: 

         Possibly null pointer owned by this object, i.e. which must `not`  be deleted by the caller.  







      .. versionadded:: 4.1/wxWidgets-3.1.6  
     








   .. method:: HasImages(self)

      Return ``True`` if the control has any images associated with it.                  

                

      :rtype: `bool`







      .. versionadded:: 4.1/wxWidgets-3.1.6  
     







      .. seealso:: :meth:`GetImageCount`   








   .. method:: SetImageList(self, imageList)

      Sets the image list to use.                  

      It does not take ownership of the image list, you must delete it yourself. 

      This function exists for compatibility only, please use :meth:`SetImages`   in the new code. 

                


      :param `imageList`: 
      :type `imageList`: wx.ImageList






      .. seealso:: :ref:`wx.ImageList`, :meth:`AssignImageList`     








   .. method:: SetImages(self, images)

      Set the images to use for the items in the control.                  

      This function allows to specify the images to use in multiple different resolutions, letting the control to select the appropriate one for its ``DPI`` scaling. For this reason, it should be preferred to using the functions taking :ref:`wx.ImageList`, which has a fixed size, in the new code. 




      :param `images`: Non empty vector of bitmap bundles. Valid image indexes for the items in this control are determined by the size of this vector.  
      :type `images`: Vector




                  



      .. versionadded:: 4.1/wxWidgets-3.1.6  
     








   .. attribute:: ImageCount

      See :meth:`~wx.WithImages.GetImageCount`


   .. attribute:: ImageList

      See :meth:`~wx.WithImages.GetImageList` and :meth:`~wx.WithImages.SetImageList`

