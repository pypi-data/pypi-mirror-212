
import click
import os
import emoji

from huggingface_hub import snapshot_download

from compllments.utils.model import Writer, Selector
from compllments.utils.texter import Texter
from compllments.config import INFERENCE_CONFIG



# REPLACE WITH CUSTOMIZED ONE
TEMPLATE = """Write a brief text message in {language} to my best friend {name}. The text message should be casual in tone and take the form of a positive affirmation. It should compliment {name} and make them feel happier and better about themself."""


@click.command()
@click.option("-model", "-m", type=str, required=True, help='Name of model in HuggingFace Hub.')
def download(model):
    save_path = f"{os.getcwd()}/models/{model.replace('/', '_')}"
    snapshot_download(repo_id=model, local_dir=save_path)




@click.command()
@click.option("-recipient", "-r", type=str, required=True, help='Name of person recieving message. e.g. "Jane Doe".')
@click.option("-sender", "-s", type=str, default="", help='Name of person sending message. e.g. "John Doe".')
@click.option("-number", "-n", type=str, required=True, help='Phone number to text with country code e.g. "+11234567890".')
@click.option("-language", "-l", type=str, default="english", help='Language in which to generate text.')
@click.option("-select-best", "-b", is_flag=True, help='Whether to use sentiment analysis to pick the best message.')
@click.option("-message-type", "-t", type=click.Choice(["sms", "whatsapp"]), required=True, help='Type of message.')
@click.option("-openai-key", "-o", type=str, default="", help='Pass your OpenAI API key if you want to use their models.')
def cli(recipient: str, sender: str, number: str, language: str, select_best: bool, message_type: str, openai_key: str):

    os.environ["OPENAI_API_KEY"] = openai_key

    # select_best only works with certain langauges
    if select_best == False:
        INFERENCE_CONFIG["num_examples"] == 1

    # Instantiate helper objects
    text_generator = Writer(config=INFERENCE_CONFIG, template=TEMPLATE)
    text_sender = Texter(message_type=message_type)

    # Generate messages
    messages = text_generator.generate_text(name=recipient, language=language)
    del text_generator


    # Select message
    if select_best == True:
        text_selector = Selector()
        message_dict  = text_selector.select(messages)
        print(f"The most positive message had a score of {message_dict['score']}")
        message = message_dict["text"]

    else:
        message = messages[0]


    # Send message
    final_message = f"{sender} has a message for you: {message} \n\nThis messsge was generated by an AI Chatbot" + emoji.emojize(":robot:")
    text_sender.send(number=number, message=final_message)

    print(f"The following message was sent to {recipient}: \n\n{final_message}")

