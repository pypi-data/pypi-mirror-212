version: '3.10'

services:

  db:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      POSTGRES_DB: ${POSTGRES_DB:-root}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-root@root.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-root}
    volumes:
      - my-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres

  minio:
    container_name: minio
    image: quay.io/minio/minio:RELEASE.2023-05-18T00-05-36Z
    command: server --console-address ":9001" /data/
    expose:
      - '9000'
      - '9001'
    environment:
      MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID:-root-root-root}
      MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY:-root-root-root}
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - minio_app
    volumes:
      - ./minio/:/data

  nginx:
    image: nginx:1.25.0-alpine
    container_name: nginx
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - minio_app
    depends_on:
      - minio

  mlflow:
    container_name: mlflow_server
    restart: always
    build: .
    image: mlflow_server
    ports:
      - "5000:5000"
    networks:
      - postgres
      - minio_app
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-123}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-root-root-root}
      - MLFLOW_S3_ENDPOINT_URL=http://nginx:9000
    command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER:-root}:${POSTGRES_PASSWORD:-root}@db/${POSTGRES_DB:-root} --default-artifact-root s3://${AWS_S3_BUCKET:-root}/ --host 0.0.0.0

volumes:
  postgres:
  my-data:


networks:
  postgres:
    driver: bridge
  minio_app:
    driver: bridge
