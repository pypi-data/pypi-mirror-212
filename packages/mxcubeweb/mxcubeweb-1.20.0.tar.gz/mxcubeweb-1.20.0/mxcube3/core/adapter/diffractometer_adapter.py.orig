from mxcube3.core.adapter.adapter_base import AdapterBase


class DiffractometerAdapter(AdapterBase):
    ATTRIBUTES = ["head_configuration"]
<<<<<<< HEAD
    METHODS = ["set_chip_calibration"]
=======
    METHODS = ["set_chip_layout"]
>>>>>>> gitlab/gitlab-develop-id29

    def __init__(self, ho, *args, **kwargs):
        """
        Args:
            (object): Hardware object.
        """
        super(DiffractometerAdapter, self).__init__(ho, *args, **kwargs)
        ho.connect("stateChanged", self._state_change)

    def _state_change(self, *args, **kwargs):     
        self.state_change(**kwargs)

    def stop(self):
        pass

    def state(self):
        return "READY" if self._ho._ready() else "BUSY"

    def head_configuration(self) -> dict:
        data = self._ho.get_head_configuration()
        data = data.dict() if data else {}

        return data
    
<<<<<<< HEAD
    def set_chip_calibration(
        self,
        top_left_x: float,
        top_left_y: float,
        bottom_right_x: float,
        bottom_right_y: float
        ) -> bool:
            self._ho.set_chip_calibration(
                 top_left_x, top_left_y, bottom_right_x, bottom_right_y
=======
    def set_chip_layout(
        self,
        layout_name: str,
        ) -> bool:
            self._ho.set_chip_layout(
                 layout_name
>>>>>>> gitlab/gitlab-develop-id29
            )
            return True