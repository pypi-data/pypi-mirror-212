### Installation
(Python used: Python 3.10.8)

# 1. Open command prompt and naviagte to folder (e.g. C\dev\NeuralNetworkTensorflowFramework) 
# 2. Create virtual environment
python -m venv .venvNN
# 3. Activate virtual environment in Command Prompt:
Windows: .venvNN\Scripts\activate.bat
Ubuntu: source .venvNN/bin/activate
# 4. Install packages from requirements.txt, 
pip install -r requirements.txt


### To add new packages: Update/Generate requirements.txt from current installation
pip freeze > requirements.txt


### Useful commands:

# (Use direct path of Python if other python version is required, e.g. C\Users\AppData\Local\Programs\Python\Python39\python.exe)
# Print used Python (prints version of global used or Venv if in a Venv)
python -V
# Deactivate environment
deactivate
# Python package lookup path
echo %PATH%
# pip upgrade can be upgraded by
c:\dev\test\.venvNN\Scripts\python.exe -m pip install --upgrade pip
# or if Veng is activated just
python -m pip install --upgrade pip

### On Ubuntu the following was required to be able to pip install -r requirements.txt
sudo apt-get install libfreetype6-dev
sudo apt-get install pkg-config
sudo apt-get install libpng12-dev
sudo apt-get install pkg-config
sudo apt-get install build-essential libssl-dev libffi-dev python3

pip install -r requirementsUbuntu.txt

# For tensorflow amd gpu
https://docs.amd.com/bundle/ROCm-Installation-Guide-v5.4.2/page/How_to_Install_ROCm.html#_How_to_Install
