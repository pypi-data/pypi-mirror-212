Metadata-Version: 2.1
Name: utah-project
Version: 1.5.0
Summary: Utah Project
Home-page: https://www.utahproject.org
Author: George Tsiones
Author-email: gtsiones@comcast.net
License: BSD-3
Keywords: pipeline flask deployment
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python :: 3.6
Classifier: Framework :: Flask
Requires-Python: >3.6
Requires-Dist: flask (>2.0.0)
Requires-Dist: blinker
Requires-Dist: pyyaml
Requires-Dist: pymongo
Requires-Dist: requests
Requires-Dist: python-dateutil
Requires-Dist: Flask-Babel (<3.0.0)
Requires-Dist: flask-restful
Requires-Dist: importlib-metadata

Utah Project
============

Utah Project is designed to help developers build full stack web app solutions in python. It does this by integrating many of the 
components in the python ecosystem into one software stack realized in a preconfigured reference application.
It begins with a set of base libraries to handle common needs when building web applications 
and fronts them with flask. It takes into consideration the following problems: 

1. Externalized Content Management and Delivery
2. Authentication
3. Authorization
4. Profile Management
5. Configuration Bootstrapping
6. Site Navigation
7. Command processing
8. Robust and Dynamic Page Templating
9. Internationalization
10. Server Configuration (For CentOS and Redhat)
11. APIs

For more detail go to our `home page`_.

Consumption Models
------------------
Utah can be consumed in two modes. 

1. Canned installable RPM for Linux Systems
2. Workspace for building your own applications

Installing our canned application on a server is pretty straight forward and out 
of the box will provide a nice content management and delivery solution.  To get 
started follow our `Quick Start`_ guide

The workspace gives you the ability to mix your functionality with our out of 
the box services. Our command processing is all based on `flask`_. Your first question 
might be why flask? Simple enough; flask is awesome and the most straight forward 
way to implement web functionality in python. If you know flask, adding 
functionality will be a simple proposition. The workspace comes with all 
of the component dependancies preconfgiured in a working application ready 
to have your functionality added to it. In addtion the workspace comes with an RPM spec 
which is needed to build your application into your own RPM so your 
application is server deployable.


Setting up a workspace is also straightforward.  To do so follow our `workspace setup`_ guide.


Release Notes
-------------
**Version 1.5.0**

Features:

* Added a navigation editor

Bug Fixes:

* Fixed issue with the editing of non-default locale metadata. The editor was inheriting default locale metadata when retrieving the document
* Corrected issue with layout thumbnail in ehtml editor. The image was named consisently with other layouts but the layout name was not. Changed layout name from 1_col_with_title to 1_col_with_header. Note: This change will be required in the content if upgrading an existing arches app.
* Added the ability to add off site urls to navigation
* Corrected the rpm.spec to correct issue with link creation for status content during rpm install


**Version 1.4.0**

Features:

* Added drag and drop content to text snippets in addition to full pages
* Changed coloring on text editor. Dark background and blue text.
* Content editor now prompts before abandoning changes when another file or a folder is selected

Bug Fixes:

* Corrected issue with workspace setup. Should only need utah_project which references all other dependancies but was referencing flask. This caused a version conflict during workspace setup.
* Corrected coloring on dialog boxes


**Version 1.3.2**

Features:

* Broke content management app into more manageable includes
* Added the ability to drag content items into a .html document. Drop functionality is context sensitive based on the item being dragged.
* Added feature flags for flask modules and utah services so the load can be skipped using environment variables  

Bug Fixes:

Corrected issue in bootstrap pathing


**Version 1.2.0**

Features:

No features were added in this release

Bug Fixes:

* When a new group was created missing a description. The system displayed an error but did not reload the available rights and selected rights.
* Bryce setup did verify the correct configuration was in place. When the setup was run like this the system would create the databases but fail leaving the install in an un recoverable state as the databases and service accounts would have to be cleaned up by hand. 
* Adding a new group did not validate if the group name was null


**Version 1.1.0**

Features:

* Added code to bootstrap to remove generated password from the system disk on startup.
* This information should be noted before the application is started.

Bug Fixes:

There were no bug fixes in this release

.. _home page: https://www.utahproject.org
.. _Quick Start: https://www.utahproject.org/main/how_tos/installation_and_configuration.html#quick_setup
.. _flask: https://flask.palletsprojects.com/en/2.0.x/
.. _workspace setup: https://www.utahproject.org/main/how_tos/developers.html
