# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: epics_event.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x65pics_event.proto\x12\x05\x45PICS\"\'\n\nFieldValue\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0b\n\x03val\x18\x02 \x02(\t\"\xc2\x01\n\x0cScalarString\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x02(\t\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc0\x01\n\nScalarByte\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x02(\x0c\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc1\x01\n\x0bScalarShort\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x02(\x11\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xbf\x01\n\tScalarInt\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x02(\x0f\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc0\x01\n\nScalarEnum\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x02(\x11\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc1\x01\n\x0bScalarFloat\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x02(\x02\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc2\x01\n\x0cScalarDouble\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x02(\x01\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc2\x01\n\x0cVectorString\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x03(\t\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc0\x01\n\nVectorChar\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x02(\x0c\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc5\x01\n\x0bVectorShort\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0f\n\x03val\x18\x03 \x03(\x11\x42\x02\x10\x01\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc3\x01\n\tVectorInt\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0f\n\x03val\x18\x03 \x03(\x0f\x42\x02\x10\x01\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc4\x01\n\nVectorEnum\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0f\n\x03val\x18\x03 \x03(\x11\x42\x02\x10\x01\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc5\x01\n\x0bVectorFloat\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0f\n\x03val\x18\x03 \x03(\x02\x42\x02\x10\x01\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xc6\x01\n\x0cVectorDouble\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0f\n\x03val\x18\x03 \x03(\x01\x42\x02\x10\x01\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\"\xd5\x01\n\x0eV4GenericBytes\x12\x17\n\x0fsecondsintoyear\x18\x01 \x02(\r\x12\x0c\n\x04nano\x18\x02 \x02(\r\x12\x0b\n\x03val\x18\x03 \x02(\x0c\x12\x13\n\x08severity\x18\x04 \x01(\x05:\x01\x30\x12\x11\n\x06status\x18\x05 \x01(\x05:\x01\x30\x12\x13\n\x0brepeatcount\x18\x06 \x01(\r\x12&\n\x0b\x66ieldvalues\x18\x07 \x03(\x0b\x32\x11.EPICS.FieldValue\x12\x19\n\x11\x66ieldactualchange\x18\x08 \x01(\x08\x12\x0f\n\x07userTag\x18\t \x01(\r\"\xbb\x02\n\x0bPayloadInfo\x12 \n\x04type\x18\x01 \x02(\x0e\x32\x12.EPICS.PayloadType\x12\x0e\n\x06pvname\x18\x02 \x02(\t\x12\x0c\n\x04year\x18\x03 \x02(\x05\x12\x14\n\x0c\x65lementCount\x18\x04 \x01(\x05\x12\x10\n\x08unused00\x18\x05 \x01(\x01\x12\x10\n\x08unused01\x18\x06 \x01(\x01\x12\x10\n\x08unused02\x18\x07 \x01(\x01\x12\x10\n\x08unused03\x18\x08 \x01(\x01\x12\x10\n\x08unused04\x18\t \x01(\x01\x12\x10\n\x08unused05\x18\n \x01(\x01\x12\x10\n\x08unused06\x18\x0b \x01(\x01\x12\x10\n\x08unused07\x18\x0c \x01(\x01\x12\x10\n\x08unused08\x18\r \x01(\x01\x12\x10\n\x08unused09\x18\x0e \x01(\t\x12\"\n\x07headers\x18\x0f \x03(\x0b\x32\x11.EPICS.FieldValue*\xa9\x02\n\x0bPayloadType\x12\x11\n\rSCALAR_STRING\x10\x00\x12\x10\n\x0cSCALAR_SHORT\x10\x01\x12\x10\n\x0cSCALAR_FLOAT\x10\x02\x12\x0f\n\x0bSCALAR_ENUM\x10\x03\x12\x0f\n\x0bSCALAR_BYTE\x10\x04\x12\x0e\n\nSCALAR_INT\x10\x05\x12\x11\n\rSCALAR_DOUBLE\x10\x06\x12\x13\n\x0fWAVEFORM_STRING\x10\x07\x12\x12\n\x0eWAVEFORM_SHORT\x10\x08\x12\x12\n\x0eWAVEFORM_FLOAT\x10\t\x12\x11\n\rWAVEFORM_ENUM\x10\n\x12\x11\n\rWAVEFORM_BYTE\x10\x0b\x12\x10\n\x0cWAVEFORM_INT\x10\x0c\x12\x13\n\x0fWAVEFORM_DOUBLE\x10\r\x12\x14\n\x10V4_GENERIC_BYTES\x10\x0e\x42\x34\n&edu.stanford.slac.archiverappliance.PBB\nEPICSEvent')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'epics_event_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n&edu.stanford.slac.archiverappliance.PBB\nEPICSEvent'
  _VECTORSHORT.fields_by_name['val']._options = None
  _VECTORSHORT.fields_by_name['val']._serialized_options = b'\020\001'
  _VECTORINT.fields_by_name['val']._options = None
  _VECTORINT.fields_by_name['val']._serialized_options = b'\020\001'
  _VECTORENUM.fields_by_name['val']._options = None
  _VECTORENUM.fields_by_name['val']._serialized_options = b'\020\001'
  _VECTORFLOAT.fields_by_name['val']._options = None
  _VECTORFLOAT.fields_by_name['val']._serialized_options = b'\020\001'
  _VECTORDOUBLE.fields_by_name['val']._options = None
  _VECTORDOUBLE.fields_by_name['val']._serialized_options = b'\020\001'
  _PAYLOADTYPE._serialized_start=3364
  _PAYLOADTYPE._serialized_end=3661
  _FIELDVALUE._serialized_start=28
  _FIELDVALUE._serialized_end=67
  _SCALARSTRING._serialized_start=70
  _SCALARSTRING._serialized_end=264
  _SCALARBYTE._serialized_start=267
  _SCALARBYTE._serialized_end=459
  _SCALARSHORT._serialized_start=462
  _SCALARSHORT._serialized_end=655
  _SCALARINT._serialized_start=658
  _SCALARINT._serialized_end=849
  _SCALARENUM._serialized_start=852
  _SCALARENUM._serialized_end=1044
  _SCALARFLOAT._serialized_start=1047
  _SCALARFLOAT._serialized_end=1240
  _SCALARDOUBLE._serialized_start=1243
  _SCALARDOUBLE._serialized_end=1437
  _VECTORSTRING._serialized_start=1440
  _VECTORSTRING._serialized_end=1634
  _VECTORCHAR._serialized_start=1637
  _VECTORCHAR._serialized_end=1829
  _VECTORSHORT._serialized_start=1832
  _VECTORSHORT._serialized_end=2029
  _VECTORINT._serialized_start=2032
  _VECTORINT._serialized_end=2227
  _VECTORENUM._serialized_start=2230
  _VECTORENUM._serialized_end=2426
  _VECTORFLOAT._serialized_start=2429
  _VECTORFLOAT._serialized_end=2626
  _VECTORDOUBLE._serialized_start=2629
  _VECTORDOUBLE._serialized_end=2827
  _V4GENERICBYTES._serialized_start=2830
  _V4GENERICBYTES._serialized_end=3043
  _PAYLOADINFO._serialized_start=3046
  _PAYLOADINFO._serialized_end=3361
# @@protoc_insertion_point(module_scope)
