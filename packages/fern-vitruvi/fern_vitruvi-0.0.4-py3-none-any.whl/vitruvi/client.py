# This file was auto-generated by Fern from our API Definition.

import typing

from .resources.auth.client import AsyncAuthClient, AuthClient
from .resources.global_configuration.client import AsyncGlobalConfigurationClient, GlobalConfigurationClient
from .resources.jobs.client import AsyncJobsClient, JobsClient
from .resources.reporting.client import AsyncReportingClient, ReportingClient


class Vitruvi:
    def __init__(self, *, environment: str, token: typing.Optional[str] = None):
        self._environment = environment
        self._token = token
        self.global_configuration = GlobalConfigurationClient(environment=self._environment, token=self._token)
        self.reporting = ReportingClient(environment=self._environment, token=self._token)
        self.jobs = JobsClient(environment=self._environment, token=self._token)
        self.auth = AuthClient(environment=self._environment, token=self._token)


class AsyncVitruvi:
    def __init__(self, *, environment: str, token: typing.Optional[str] = None):
        self._environment = environment
        self._token = token
        self.global_configuration = AsyncGlobalConfigurationClient(environment=self._environment, token=self._token)
        self.reporting = AsyncReportingClient(environment=self._environment, token=self._token)
        self.jobs = AsyncJobsClient(environment=self._environment, token=self._token)
        self.auth = AsyncAuthClient(environment=self._environment, token=self._token)
