Metadata-Version: 2.1
Name: Mediana-sdk
Version: 1.0.2
Summary: Mediana sms api
Home-page: 
Author: OpenAPI Generator community
Author-email: team@openapitools.org
License: MIT
Keywords: OpenAPI,OpenAPI-Generator,Mediana sms api
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: urllib3 (>=1.25.3)
Requires-Dist: python-dateutil

# Mediana-sdk
Mediana sms api doc </br>  sdks for some programming languages is in out github at https://github.com/ippanelippanel </br> api-key format: <code>Authorization: \"AccessKey your-api-key\"</code>

# Authentication

<!-- ReDoc-Inject: <security-definitions> -->

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 1.0.1
- Package version: 1.0.2
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python >= 3.6

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import Mediana-sdk
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import Mediana-sdk
```

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import time
import Mediana-sdk
from pprint import pprint
from Mediana-sdk.api import auth_api
from Mediana-sdk.model.inline_response200 import InlineResponse200
from Mediana-sdk.model.inline_response401 import InlineResponse401
# Defining the host is optional and defaults to http://rest.ippanel.com
# See configuration.py for a list of all supported configuration parameters.
configuration = Mediana-sdk.Configuration(
    host = "http://rest.ippanel.com"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

# Configure API key authorization: ApiKeyAuth
configuration.api_key['ApiKeyAuth'] = 'YOUR_API_KEY'

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['ApiKeyAuth'] = 'Bearer'


# Enter a context with an instance of the API client
with Mediana-sdk.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = auth_api.AuthApi(api_client)
    
    try:
        api_response = api_instance.get_authorized_user()
        pprint(api_response)
    except Mediana-sdk.ApiException as e:
        print("Exception when calling AuthApi->get_authorized_user: %s\n" % e)
```

## Documentation for API Endpoints

All URIs are relative to *http://rest.ippanel.com*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*AuthApi* | [**get_authorized_user**](docs/AuthApi.md#get_authorized_user) | **GET** /v1/user | 
*CreditApi* | [**get_credit**](docs/CreditApi.md#get_credit) | **GET** /v1/credit | 
*MessagesApi* | [**create_pattern**](docs/MessagesApi.md#create_pattern) | **POST** /v1/messages/patterns | 
*MessagesApi* | [**fetch_inbox_messages**](docs/MessagesApi.md#fetch_inbox_messages) | **GET** /v1/messages/inbox | 
*MessagesApi* | [**get_message_recipients_status**](docs/MessagesApi.md#get_message_recipients_status) | **GET** /v1/messages/{bulk_id}/recipients | 
*MessagesApi* | [**get_sms**](docs/MessagesApi.md#get_sms) | **GET** /v1/messages/{bulk_id} | 
*MessagesApi* | [**send_pattern**](docs/MessagesApi.md#send_pattern) | **POST** /v1/messages/patterns/send | 
*MessagesApi* | [**send_sms**](docs/MessagesApi.md#send_sms) | **POST** /v1/messages | 


## Documentation For Models

 - [InboxMessage](docs/InboxMessage.md)
 - [InlineResponse200](docs/InlineResponse200.md)
 - [InlineResponse2001](docs/InlineResponse2001.md)
 - [InlineResponse2002](docs/InlineResponse2002.md)
 - [InlineResponse2003](docs/InlineResponse2003.md)
 - [InlineResponse2004](docs/InlineResponse2004.md)
 - [InlineResponse2005](docs/InlineResponse2005.md)
 - [InlineResponse2006](docs/InlineResponse2006.md)
 - [InlineResponse401](docs/InlineResponse401.md)
 - [Message](docs/Message.md)
 - [Meta](docs/Meta.md)
 - [Pattern](docs/Pattern.md)
 - [Recipient](docs/Recipient.md)
 - [User](docs/User.md)


## Documentation For Authorization


## ApiKeyAuth

- **Type**: API key
- **API key parameter name**: Authorization
- **Location**: HTTP header


## Author




## Notes for Large OpenAPI documents
If the OpenAPI document is large, imports in Mediana-sdk.apis and Mediana-sdk.models may fail with a
RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:

Solution 1:
Use specific imports for apis and models like:
- `from Mediana-sdk.api.default_api import DefaultApi`
- `from Mediana-sdk.model.pet import Pet`

Solution 2:
Before importing the package, adjust the maximum recursion limit as shown below:
```
import sys
sys.setrecursionlimit(1500)
import Mediana-sdk
from Mediana-sdk.apis import *
from Mediana-sdk.models import *
```

