Metadata-Version: 2.1
Name: config-mgmt-server
Version: 1.0.14
Summary: Suncoast Systems Core Router Config Mgmt Server
Author-email: Suncoast Systems <administrator@suncoast.systems>
Maintainer-email: Dotcom Row <dotcom.row@gmail.com>
License: This project is only for Dotcom Row services, no other use is allowed or even possible!
Project-URL: Homepage, https://github.com/pypa/sampleproject
Project-URL: Bug Reports, https://github.com/pypa/sampleproject/issues
Project-URL: Funding, https://donate.pypi.org
Project-URL: Say Thanks!, http://saythanks.io/to/example
Project-URL: Source, https://github.com/pypa/sampleproject/
Keywords: config,suncoast systems,router
Classifier: Development Status :: 3 - Alpha
Classifier: Topic :: System :: Operating System Kernels :: BSD
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: python-daemon
Requires-Dist: flask
Requires-Dist: celery
Provides-Extra: dev
Requires-Dist: check-manifest ; extra == 'dev'
Provides-Extra: test
Requires-Dist: coverage ; extra == 'test'

# VSCode Python Project Template

Template for my python (version 3) projects with vscode

## Commands

* Init space (with bash) : `source _initial_setup.sh`
* Create virtualenv virtualenv : `virtualenv -p python3 .venv`
* Load/Source virtuelenv : `source .venv/bin/activate`
* Install requirements : `pip install -r requirements.txt`
* Install test requirements : `pip install -r tests/requirements.txt`
* Launch unitary tests : `python3 -m pytest tests -v`
* Launch coverage tests : `python3 -m pytest --cov-report xml:cov.xml --cov my_module tests -v`

## Tools choices

* Format python code with **autopep8**. Others here : <https://code.visualstudio.com/docs/python/editing#_formatting>
* Static analysis with **pylint**. Others here : <https://code.visualstudio.com/docs/python/linting>
* Unitary tests with **pytest**. Others here : <https://code.visualstudio.com/docs/python/unit-testing>

* Available options for python with vscode available here : <<https://code.visualstudio.com/docs/python/settings-referenc>e>

## Extensions

Usefull extensions :

* Python (<https://marketplace.visualstudio.com/items?itemName=ms-python.python)>
* Coverage Gutters (<https://marketplace.visualstudio.com/items?itemName=ryanluker.vscode-coverage-gutters)>
* Better Comments (<https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments)>
* indent-rainbow (<https://marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow)>
* Trailing Spaces (<https://marketplace.visualstudio.com/items?itemName=shardulm94.trailing-spaces)>
* Rainbow Brackets (<https://marketplace.visualstudio.com/items?itemName=2gua.rainbow-brackets)>
* Git Lens (<https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)>
* EditorConfig (<https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig>)
* Git Project Manager (<https://marketplace.visualstudio.com/items?itemName=felipecaputo.git-project-manager>)

## Tasks

* Unitary tests with code coverage

## Use it

* Clone this repo as a new vscode workspace
* Create virtualenv and install requirements (see [Commands](Commands))
* Rename folder *my_module* with your module name
* In *.vscode/tasks.json*, replace *my_module* by your module name
* Fix module import in *main.py* and *./tests/test_my_module.yy* if needed
* Try everything by:
  * Launching unitary tests
  * Launching task
  * Launching configurations
  * Debugging with a breakpoint

## Sources

* <https://github.com/dwd-umd/python-project-template>
