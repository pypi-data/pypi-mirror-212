# coding: utf-8

"""
    Nexus Repository Manager REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 3.42.0-01
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class V1ComponentsBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "helm_tag": "str",
        "helm_asset": "str",
        "r_tag": "str",
        "r_asset": "str",
        "r_asset_path_id": "str",
        "pypi_tag": "str",
        "pypi_asset": "str",
        "docker_tag": "str",
        "docker_asset": "str",
        "yum_directory": "str",
        "yum_tag": "str",
        "yum_asset": "str",
        "yum_asset_filename": "str",
        "rubygems_tag": "str",
        "rubygems_asset": "str",
        "nuget_tag": "str",
        "nuget_asset": "str",
        "npm_tag": "str",
        "npm_asset": "str",
        "raw_directory": "str",
        "raw_tag": "str",
        "raw_asset1": "str",
        "raw_asset1_filename": "str",
        "raw_asset2": "str",
        "raw_asset2_filename": "str",
        "raw_asset3": "str",
        "raw_asset3_filename": "str",
        "apt_tag": "str",
        "apt_asset": "str",
        "maven2_group_id": "str",
        "maven2_artifact_id": "str",
        "maven2_version": "str",
        "maven2_generate_pom": "bool",
        "maven2_packaging": "str",
        "maven2_tag": "str",
        "maven2_asset1": "str",
        "maven2_asset1_classifier": "str",
        "maven2_asset1_extension": "str",
        "maven2_asset2": "str",
        "maven2_asset2_classifier": "str",
        "maven2_asset2_extension": "str",
        "maven2_asset3": "str",
        "maven2_asset3_classifier": "str",
        "maven2_asset3_extension": "str",
    }

    attribute_map = {
        "helm_tag": "helm.tag",
        "helm_asset": "helm.asset",
        "r_tag": "r.tag",
        "r_asset": "r.asset",
        "r_asset_path_id": "r.asset.pathId",
        "pypi_tag": "pypi.tag",
        "pypi_asset": "pypi.asset",
        "docker_tag": "docker.tag",
        "docker_asset": "docker.asset",
        "yum_directory": "yum.directory",
        "yum_tag": "yum.tag",
        "yum_asset": "yum.asset",
        "yum_asset_filename": "yum.asset.filename",
        "rubygems_tag": "rubygems.tag",
        "rubygems_asset": "rubygems.asset",
        "nuget_tag": "nuget.tag",
        "nuget_asset": "nuget.asset",
        "npm_tag": "npm.tag",
        "npm_asset": "npm.asset",
        "raw_directory": "raw.directory",
        "raw_tag": "raw.tag",
        "raw_asset1": "raw.asset1",
        "raw_asset1_filename": "raw.asset1.filename",
        "raw_asset2": "raw.asset2",
        "raw_asset2_filename": "raw.asset2.filename",
        "raw_asset3": "raw.asset3",
        "raw_asset3_filename": "raw.asset3.filename",
        "apt_tag": "apt.tag",
        "apt_asset": "apt.asset",
        "maven2_group_id": "maven2.groupId",
        "maven2_artifact_id": "maven2.artifactId",
        "maven2_version": "maven2.version",
        "maven2_generate_pom": "maven2.generate-pom",
        "maven2_packaging": "maven2.packaging",
        "maven2_tag": "maven2.tag",
        "maven2_asset1": "maven2.asset1",
        "maven2_asset1_classifier": "maven2.asset1.classifier",
        "maven2_asset1_extension": "maven2.asset1.extension",
        "maven2_asset2": "maven2.asset2",
        "maven2_asset2_classifier": "maven2.asset2.classifier",
        "maven2_asset2_extension": "maven2.asset2.extension",
        "maven2_asset3": "maven2.asset3",
        "maven2_asset3_classifier": "maven2.asset3.classifier",
        "maven2_asset3_extension": "maven2.asset3.extension",
    }

    def __init__(
        self,
        helm_tag=None,
        helm_asset=None,
        r_tag=None,
        r_asset=None,
        r_asset_path_id=None,
        pypi_tag=None,
        pypi_asset=None,
        docker_tag=None,
        docker_asset=None,
        yum_directory=None,
        yum_tag=None,
        yum_asset=None,
        yum_asset_filename=None,
        rubygems_tag=None,
        rubygems_asset=None,
        nuget_tag=None,
        nuget_asset=None,
        npm_tag=None,
        npm_asset=None,
        raw_directory=None,
        raw_tag=None,
        raw_asset1=None,
        raw_asset1_filename=None,
        raw_asset2=None,
        raw_asset2_filename=None,
        raw_asset3=None,
        raw_asset3_filename=None,
        apt_tag=None,
        apt_asset=None,
        maven2_group_id=None,
        maven2_artifact_id=None,
        maven2_version=None,
        maven2_generate_pom=None,
        maven2_packaging=None,
        maven2_tag=None,
        maven2_asset1=None,
        maven2_asset1_classifier=None,
        maven2_asset1_extension=None,
        maven2_asset2=None,
        maven2_asset2_classifier=None,
        maven2_asset2_extension=None,
        maven2_asset3=None,
        maven2_asset3_classifier=None,
        maven2_asset3_extension=None,
    ):  # noqa: E501
        """V1ComponentsBody - a model defined in Swagger"""  # noqa: E501
        self._helm_tag = None
        self._helm_asset = None
        self._r_tag = None
        self._r_asset = None
        self._r_asset_path_id = None
        self._pypi_tag = None
        self._pypi_asset = None
        self._docker_tag = None
        self._docker_asset = None
        self._yum_directory = None
        self._yum_tag = None
        self._yum_asset = None
        self._yum_asset_filename = None
        self._rubygems_tag = None
        self._rubygems_asset = None
        self._nuget_tag = None
        self._nuget_asset = None
        self._npm_tag = None
        self._npm_asset = None
        self._raw_directory = None
        self._raw_tag = None
        self._raw_asset1 = None
        self._raw_asset1_filename = None
        self._raw_asset2 = None
        self._raw_asset2_filename = None
        self._raw_asset3 = None
        self._raw_asset3_filename = None
        self._apt_tag = None
        self._apt_asset = None
        self._maven2_group_id = None
        self._maven2_artifact_id = None
        self._maven2_version = None
        self._maven2_generate_pom = None
        self._maven2_packaging = None
        self._maven2_tag = None
        self._maven2_asset1 = None
        self._maven2_asset1_classifier = None
        self._maven2_asset1_extension = None
        self._maven2_asset2 = None
        self._maven2_asset2_classifier = None
        self._maven2_asset2_extension = None
        self._maven2_asset3 = None
        self._maven2_asset3_classifier = None
        self._maven2_asset3_extension = None
        self.discriminator = None
        if helm_tag is not None:
            self.helm_tag = helm_tag
        if helm_asset is not None:
            self.helm_asset = helm_asset
        if r_tag is not None:
            self.r_tag = r_tag
        if r_asset is not None:
            self.r_asset = r_asset
        if r_asset_path_id is not None:
            self.r_asset_path_id = r_asset_path_id
        if pypi_tag is not None:
            self.pypi_tag = pypi_tag
        if pypi_asset is not None:
            self.pypi_asset = pypi_asset
        if docker_tag is not None:
            self.docker_tag = docker_tag
        if docker_asset is not None:
            self.docker_asset = docker_asset
        if yum_directory is not None:
            self.yum_directory = yum_directory
        if yum_tag is not None:
            self.yum_tag = yum_tag
        if yum_asset is not None:
            self.yum_asset = yum_asset
        if yum_asset_filename is not None:
            self.yum_asset_filename = yum_asset_filename
        if rubygems_tag is not None:
            self.rubygems_tag = rubygems_tag
        if rubygems_asset is not None:
            self.rubygems_asset = rubygems_asset
        if nuget_tag is not None:
            self.nuget_tag = nuget_tag
        if nuget_asset is not None:
            self.nuget_asset = nuget_asset
        if npm_tag is not None:
            self.npm_tag = npm_tag
        if npm_asset is not None:
            self.npm_asset = npm_asset
        if raw_directory is not None:
            self.raw_directory = raw_directory
        if raw_tag is not None:
            self.raw_tag = raw_tag
        if raw_asset1 is not None:
            self.raw_asset1 = raw_asset1
        if raw_asset1_filename is not None:
            self.raw_asset1_filename = raw_asset1_filename
        if raw_asset2 is not None:
            self.raw_asset2 = raw_asset2
        if raw_asset2_filename is not None:
            self.raw_asset2_filename = raw_asset2_filename
        if raw_asset3 is not None:
            self.raw_asset3 = raw_asset3
        if raw_asset3_filename is not None:
            self.raw_asset3_filename = raw_asset3_filename
        if apt_tag is not None:
            self.apt_tag = apt_tag
        if apt_asset is not None:
            self.apt_asset = apt_asset
        if maven2_group_id is not None:
            self.maven2_group_id = maven2_group_id
        if maven2_artifact_id is not None:
            self.maven2_artifact_id = maven2_artifact_id
        if maven2_version is not None:
            self.maven2_version = maven2_version
        if maven2_generate_pom is not None:
            self.maven2_generate_pom = maven2_generate_pom
        if maven2_packaging is not None:
            self.maven2_packaging = maven2_packaging
        if maven2_tag is not None:
            self.maven2_tag = maven2_tag
        if maven2_asset1 is not None:
            self.maven2_asset1 = maven2_asset1
        if maven2_asset1_classifier is not None:
            self.maven2_asset1_classifier = maven2_asset1_classifier
        if maven2_asset1_extension is not None:
            self.maven2_asset1_extension = maven2_asset1_extension
        if maven2_asset2 is not None:
            self.maven2_asset2 = maven2_asset2
        if maven2_asset2_classifier is not None:
            self.maven2_asset2_classifier = maven2_asset2_classifier
        if maven2_asset2_extension is not None:
            self.maven2_asset2_extension = maven2_asset2_extension
        if maven2_asset3 is not None:
            self.maven2_asset3 = maven2_asset3
        if maven2_asset3_classifier is not None:
            self.maven2_asset3_classifier = maven2_asset3_classifier
        if maven2_asset3_extension is not None:
            self.maven2_asset3_extension = maven2_asset3_extension

    @property
    def helm_tag(self):
        """Gets the helm_tag of this V1ComponentsBody.  # noqa: E501

        helm Tag  # noqa: E501

        :return: The helm_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._helm_tag

    @helm_tag.setter
    def helm_tag(self, helm_tag):
        """Sets the helm_tag of this V1ComponentsBody.

        helm Tag  # noqa: E501

        :param helm_tag: The helm_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._helm_tag = helm_tag

    @property
    def helm_asset(self):
        """Gets the helm_asset of this V1ComponentsBody.  # noqa: E501

        helm Asset   # noqa: E501

        :return: The helm_asset of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._helm_asset

    @helm_asset.setter
    def helm_asset(self, helm_asset):
        """Sets the helm_asset of this V1ComponentsBody.

        helm Asset   # noqa: E501

        :param helm_asset: The helm_asset of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._helm_asset = helm_asset

    @property
    def r_tag(self):
        """Gets the r_tag of this V1ComponentsBody.  # noqa: E501

        r Tag  # noqa: E501

        :return: The r_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._r_tag

    @r_tag.setter
    def r_tag(self, r_tag):
        """Sets the r_tag of this V1ComponentsBody.

        r Tag  # noqa: E501

        :param r_tag: The r_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._r_tag = r_tag

    @property
    def r_asset(self):
        """Gets the r_asset of this V1ComponentsBody.  # noqa: E501

        r Asset   # noqa: E501

        :return: The r_asset of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._r_asset

    @r_asset.setter
    def r_asset(self, r_asset):
        """Sets the r_asset of this V1ComponentsBody.

        r Asset   # noqa: E501

        :param r_asset: The r_asset of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._r_asset = r_asset

    @property
    def r_asset_path_id(self):
        """Gets the r_asset_path_id of this V1ComponentsBody.  # noqa: E501

        r Asset  Package Path  # noqa: E501

        :return: The r_asset_path_id of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._r_asset_path_id

    @r_asset_path_id.setter
    def r_asset_path_id(self, r_asset_path_id):
        """Sets the r_asset_path_id of this V1ComponentsBody.

        r Asset  Package Path  # noqa: E501

        :param r_asset_path_id: The r_asset_path_id of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._r_asset_path_id = r_asset_path_id

    @property
    def pypi_tag(self):
        """Gets the pypi_tag of this V1ComponentsBody.  # noqa: E501

        pypi Tag  # noqa: E501

        :return: The pypi_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._pypi_tag

    @pypi_tag.setter
    def pypi_tag(self, pypi_tag):
        """Sets the pypi_tag of this V1ComponentsBody.

        pypi Tag  # noqa: E501

        :param pypi_tag: The pypi_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._pypi_tag = pypi_tag

    @property
    def pypi_asset(self):
        """Gets the pypi_asset of this V1ComponentsBody.  # noqa: E501

        pypi Asset   # noqa: E501

        :return: The pypi_asset of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._pypi_asset

    @pypi_asset.setter
    def pypi_asset(self, pypi_asset):
        """Sets the pypi_asset of this V1ComponentsBody.

        pypi Asset   # noqa: E501

        :param pypi_asset: The pypi_asset of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._pypi_asset = pypi_asset

    @property
    def docker_tag(self):
        """Gets the docker_tag of this V1ComponentsBody.  # noqa: E501

        docker Tag  # noqa: E501

        :return: The docker_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._docker_tag

    @docker_tag.setter
    def docker_tag(self, docker_tag):
        """Sets the docker_tag of this V1ComponentsBody.

        docker Tag  # noqa: E501

        :param docker_tag: The docker_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._docker_tag = docker_tag

    @property
    def docker_asset(self):
        """Gets the docker_asset of this V1ComponentsBody.  # noqa: E501

        docker Asset   # noqa: E501

        :return: The docker_asset of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._docker_asset

    @docker_asset.setter
    def docker_asset(self, docker_asset):
        """Sets the docker_asset of this V1ComponentsBody.

        docker Asset   # noqa: E501

        :param docker_asset: The docker_asset of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._docker_asset = docker_asset

    @property
    def yum_directory(self):
        """Gets the yum_directory of this V1ComponentsBody.  # noqa: E501

        yum Directory  # noqa: E501

        :return: The yum_directory of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._yum_directory

    @yum_directory.setter
    def yum_directory(self, yum_directory):
        """Sets the yum_directory of this V1ComponentsBody.

        yum Directory  # noqa: E501

        :param yum_directory: The yum_directory of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._yum_directory = yum_directory

    @property
    def yum_tag(self):
        """Gets the yum_tag of this V1ComponentsBody.  # noqa: E501

        yum Tag  # noqa: E501

        :return: The yum_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._yum_tag

    @yum_tag.setter
    def yum_tag(self, yum_tag):
        """Sets the yum_tag of this V1ComponentsBody.

        yum Tag  # noqa: E501

        :param yum_tag: The yum_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._yum_tag = yum_tag

    @property
    def yum_asset(self):
        """Gets the yum_asset of this V1ComponentsBody.  # noqa: E501

        yum Asset   # noqa: E501

        :return: The yum_asset of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._yum_asset

    @yum_asset.setter
    def yum_asset(self, yum_asset):
        """Sets the yum_asset of this V1ComponentsBody.

        yum Asset   # noqa: E501

        :param yum_asset: The yum_asset of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._yum_asset = yum_asset

    @property
    def yum_asset_filename(self):
        """Gets the yum_asset_filename of this V1ComponentsBody.  # noqa: E501

        yum Asset  Filename  # noqa: E501

        :return: The yum_asset_filename of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._yum_asset_filename

    @yum_asset_filename.setter
    def yum_asset_filename(self, yum_asset_filename):
        """Sets the yum_asset_filename of this V1ComponentsBody.

        yum Asset  Filename  # noqa: E501

        :param yum_asset_filename: The yum_asset_filename of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._yum_asset_filename = yum_asset_filename

    @property
    def rubygems_tag(self):
        """Gets the rubygems_tag of this V1ComponentsBody.  # noqa: E501

        rubygems Tag  # noqa: E501

        :return: The rubygems_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._rubygems_tag

    @rubygems_tag.setter
    def rubygems_tag(self, rubygems_tag):
        """Sets the rubygems_tag of this V1ComponentsBody.

        rubygems Tag  # noqa: E501

        :param rubygems_tag: The rubygems_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._rubygems_tag = rubygems_tag

    @property
    def rubygems_asset(self):
        """Gets the rubygems_asset of this V1ComponentsBody.  # noqa: E501

        rubygems Asset   # noqa: E501

        :return: The rubygems_asset of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._rubygems_asset

    @rubygems_asset.setter
    def rubygems_asset(self, rubygems_asset):
        """Sets the rubygems_asset of this V1ComponentsBody.

        rubygems Asset   # noqa: E501

        :param rubygems_asset: The rubygems_asset of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._rubygems_asset = rubygems_asset

    @property
    def nuget_tag(self):
        """Gets the nuget_tag of this V1ComponentsBody.  # noqa: E501

        nuget Tag  # noqa: E501

        :return: The nuget_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._nuget_tag

    @nuget_tag.setter
    def nuget_tag(self, nuget_tag):
        """Sets the nuget_tag of this V1ComponentsBody.

        nuget Tag  # noqa: E501

        :param nuget_tag: The nuget_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._nuget_tag = nuget_tag

    @property
    def nuget_asset(self):
        """Gets the nuget_asset of this V1ComponentsBody.  # noqa: E501

        nuget Asset   # noqa: E501

        :return: The nuget_asset of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._nuget_asset

    @nuget_asset.setter
    def nuget_asset(self, nuget_asset):
        """Sets the nuget_asset of this V1ComponentsBody.

        nuget Asset   # noqa: E501

        :param nuget_asset: The nuget_asset of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._nuget_asset = nuget_asset

    @property
    def npm_tag(self):
        """Gets the npm_tag of this V1ComponentsBody.  # noqa: E501

        npm Tag  # noqa: E501

        :return: The npm_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._npm_tag

    @npm_tag.setter
    def npm_tag(self, npm_tag):
        """Sets the npm_tag of this V1ComponentsBody.

        npm Tag  # noqa: E501

        :param npm_tag: The npm_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._npm_tag = npm_tag

    @property
    def npm_asset(self):
        """Gets the npm_asset of this V1ComponentsBody.  # noqa: E501

        npm Asset   # noqa: E501

        :return: The npm_asset of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._npm_asset

    @npm_asset.setter
    def npm_asset(self, npm_asset):
        """Sets the npm_asset of this V1ComponentsBody.

        npm Asset   # noqa: E501

        :param npm_asset: The npm_asset of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._npm_asset = npm_asset

    @property
    def raw_directory(self):
        """Gets the raw_directory of this V1ComponentsBody.  # noqa: E501

        raw Directory  # noqa: E501

        :return: The raw_directory of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._raw_directory

    @raw_directory.setter
    def raw_directory(self, raw_directory):
        """Sets the raw_directory of this V1ComponentsBody.

        raw Directory  # noqa: E501

        :param raw_directory: The raw_directory of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._raw_directory = raw_directory

    @property
    def raw_tag(self):
        """Gets the raw_tag of this V1ComponentsBody.  # noqa: E501

        raw Tag  # noqa: E501

        :return: The raw_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._raw_tag

    @raw_tag.setter
    def raw_tag(self, raw_tag):
        """Sets the raw_tag of this V1ComponentsBody.

        raw Tag  # noqa: E501

        :param raw_tag: The raw_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._raw_tag = raw_tag

    @property
    def raw_asset1(self):
        """Gets the raw_asset1 of this V1ComponentsBody.  # noqa: E501

        raw Asset 1  # noqa: E501

        :return: The raw_asset1 of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._raw_asset1

    @raw_asset1.setter
    def raw_asset1(self, raw_asset1):
        """Sets the raw_asset1 of this V1ComponentsBody.

        raw Asset 1  # noqa: E501

        :param raw_asset1: The raw_asset1 of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._raw_asset1 = raw_asset1

    @property
    def raw_asset1_filename(self):
        """Gets the raw_asset1_filename of this V1ComponentsBody.  # noqa: E501

        raw Asset 1 Filename  # noqa: E501

        :return: The raw_asset1_filename of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._raw_asset1_filename

    @raw_asset1_filename.setter
    def raw_asset1_filename(self, raw_asset1_filename):
        """Sets the raw_asset1_filename of this V1ComponentsBody.

        raw Asset 1 Filename  # noqa: E501

        :param raw_asset1_filename: The raw_asset1_filename of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._raw_asset1_filename = raw_asset1_filename

    @property
    def raw_asset2(self):
        """Gets the raw_asset2 of this V1ComponentsBody.  # noqa: E501

        raw Asset 2  # noqa: E501

        :return: The raw_asset2 of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._raw_asset2

    @raw_asset2.setter
    def raw_asset2(self, raw_asset2):
        """Sets the raw_asset2 of this V1ComponentsBody.

        raw Asset 2  # noqa: E501

        :param raw_asset2: The raw_asset2 of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._raw_asset2 = raw_asset2

    @property
    def raw_asset2_filename(self):
        """Gets the raw_asset2_filename of this V1ComponentsBody.  # noqa: E501

        raw Asset 2 Filename  # noqa: E501

        :return: The raw_asset2_filename of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._raw_asset2_filename

    @raw_asset2_filename.setter
    def raw_asset2_filename(self, raw_asset2_filename):
        """Sets the raw_asset2_filename of this V1ComponentsBody.

        raw Asset 2 Filename  # noqa: E501

        :param raw_asset2_filename: The raw_asset2_filename of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._raw_asset2_filename = raw_asset2_filename

    @property
    def raw_asset3(self):
        """Gets the raw_asset3 of this V1ComponentsBody.  # noqa: E501

        raw Asset 3  # noqa: E501

        :return: The raw_asset3 of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._raw_asset3

    @raw_asset3.setter
    def raw_asset3(self, raw_asset3):
        """Sets the raw_asset3 of this V1ComponentsBody.

        raw Asset 3  # noqa: E501

        :param raw_asset3: The raw_asset3 of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._raw_asset3 = raw_asset3

    @property
    def raw_asset3_filename(self):
        """Gets the raw_asset3_filename of this V1ComponentsBody.  # noqa: E501

        raw Asset 3 Filename  # noqa: E501

        :return: The raw_asset3_filename of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._raw_asset3_filename

    @raw_asset3_filename.setter
    def raw_asset3_filename(self, raw_asset3_filename):
        """Sets the raw_asset3_filename of this V1ComponentsBody.

        raw Asset 3 Filename  # noqa: E501

        :param raw_asset3_filename: The raw_asset3_filename of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._raw_asset3_filename = raw_asset3_filename

    @property
    def apt_tag(self):
        """Gets the apt_tag of this V1ComponentsBody.  # noqa: E501

        apt Tag  # noqa: E501

        :return: The apt_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._apt_tag

    @apt_tag.setter
    def apt_tag(self, apt_tag):
        """Sets the apt_tag of this V1ComponentsBody.

        apt Tag  # noqa: E501

        :param apt_tag: The apt_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._apt_tag = apt_tag

    @property
    def apt_asset(self):
        """Gets the apt_asset of this V1ComponentsBody.  # noqa: E501

        apt Asset   # noqa: E501

        :return: The apt_asset of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._apt_asset

    @apt_asset.setter
    def apt_asset(self, apt_asset):
        """Sets the apt_asset of this V1ComponentsBody.

        apt Asset   # noqa: E501

        :param apt_asset: The apt_asset of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._apt_asset = apt_asset

    @property
    def maven2_group_id(self):
        """Gets the maven2_group_id of this V1ComponentsBody.  # noqa: E501

        maven2 Group ID  # noqa: E501

        :return: The maven2_group_id of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_group_id

    @maven2_group_id.setter
    def maven2_group_id(self, maven2_group_id):
        """Sets the maven2_group_id of this V1ComponentsBody.

        maven2 Group ID  # noqa: E501

        :param maven2_group_id: The maven2_group_id of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_group_id = maven2_group_id

    @property
    def maven2_artifact_id(self):
        """Gets the maven2_artifact_id of this V1ComponentsBody.  # noqa: E501

        maven2 Artifact ID  # noqa: E501

        :return: The maven2_artifact_id of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_artifact_id

    @maven2_artifact_id.setter
    def maven2_artifact_id(self, maven2_artifact_id):
        """Sets the maven2_artifact_id of this V1ComponentsBody.

        maven2 Artifact ID  # noqa: E501

        :param maven2_artifact_id: The maven2_artifact_id of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_artifact_id = maven2_artifact_id

    @property
    def maven2_version(self):
        """Gets the maven2_version of this V1ComponentsBody.  # noqa: E501

        maven2 Version  # noqa: E501

        :return: The maven2_version of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_version

    @maven2_version.setter
    def maven2_version(self, maven2_version):
        """Sets the maven2_version of this V1ComponentsBody.

        maven2 Version  # noqa: E501

        :param maven2_version: The maven2_version of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_version = maven2_version

    @property
    def maven2_generate_pom(self):
        """Gets the maven2_generate_pom of this V1ComponentsBody.  # noqa: E501

        maven2 Generate a POM file with these coordinates  # noqa: E501

        :return: The maven2_generate_pom of this V1ComponentsBody.  # noqa: E501
        :rtype: bool
        """
        return self._maven2_generate_pom

    @maven2_generate_pom.setter
    def maven2_generate_pom(self, maven2_generate_pom):
        """Sets the maven2_generate_pom of this V1ComponentsBody.

        maven2 Generate a POM file with these coordinates  # noqa: E501

        :param maven2_generate_pom: The maven2_generate_pom of this V1ComponentsBody.  # noqa: E501
        :type: bool
        """

        self._maven2_generate_pom = maven2_generate_pom

    @property
    def maven2_packaging(self):
        """Gets the maven2_packaging of this V1ComponentsBody.  # noqa: E501

        maven2 Packaging  # noqa: E501

        :return: The maven2_packaging of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_packaging

    @maven2_packaging.setter
    def maven2_packaging(self, maven2_packaging):
        """Sets the maven2_packaging of this V1ComponentsBody.

        maven2 Packaging  # noqa: E501

        :param maven2_packaging: The maven2_packaging of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_packaging = maven2_packaging

    @property
    def maven2_tag(self):
        """Gets the maven2_tag of this V1ComponentsBody.  # noqa: E501

        maven2 Tag  # noqa: E501

        :return: The maven2_tag of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_tag

    @maven2_tag.setter
    def maven2_tag(self, maven2_tag):
        """Sets the maven2_tag of this V1ComponentsBody.

        maven2 Tag  # noqa: E501

        :param maven2_tag: The maven2_tag of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_tag = maven2_tag

    @property
    def maven2_asset1(self):
        """Gets the maven2_asset1 of this V1ComponentsBody.  # noqa: E501

        maven2 Asset 1  # noqa: E501

        :return: The maven2_asset1 of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_asset1

    @maven2_asset1.setter
    def maven2_asset1(self, maven2_asset1):
        """Sets the maven2_asset1 of this V1ComponentsBody.

        maven2 Asset 1  # noqa: E501

        :param maven2_asset1: The maven2_asset1 of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_asset1 = maven2_asset1

    @property
    def maven2_asset1_classifier(self):
        """Gets the maven2_asset1_classifier of this V1ComponentsBody.  # noqa: E501

        maven2 Asset 1 Classifier  # noqa: E501

        :return: The maven2_asset1_classifier of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_asset1_classifier

    @maven2_asset1_classifier.setter
    def maven2_asset1_classifier(self, maven2_asset1_classifier):
        """Sets the maven2_asset1_classifier of this V1ComponentsBody.

        maven2 Asset 1 Classifier  # noqa: E501

        :param maven2_asset1_classifier: The maven2_asset1_classifier of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_asset1_classifier = maven2_asset1_classifier

    @property
    def maven2_asset1_extension(self):
        """Gets the maven2_asset1_extension of this V1ComponentsBody.  # noqa: E501

        maven2 Asset 1 Extension  # noqa: E501

        :return: The maven2_asset1_extension of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_asset1_extension

    @maven2_asset1_extension.setter
    def maven2_asset1_extension(self, maven2_asset1_extension):
        """Sets the maven2_asset1_extension of this V1ComponentsBody.

        maven2 Asset 1 Extension  # noqa: E501

        :param maven2_asset1_extension: The maven2_asset1_extension of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_asset1_extension = maven2_asset1_extension

    @property
    def maven2_asset2(self):
        """Gets the maven2_asset2 of this V1ComponentsBody.  # noqa: E501

        maven2 Asset 2  # noqa: E501

        :return: The maven2_asset2 of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_asset2

    @maven2_asset2.setter
    def maven2_asset2(self, maven2_asset2):
        """Sets the maven2_asset2 of this V1ComponentsBody.

        maven2 Asset 2  # noqa: E501

        :param maven2_asset2: The maven2_asset2 of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_asset2 = maven2_asset2

    @property
    def maven2_asset2_classifier(self):
        """Gets the maven2_asset2_classifier of this V1ComponentsBody.  # noqa: E501

        maven2 Asset 2 Classifier  # noqa: E501

        :return: The maven2_asset2_classifier of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_asset2_classifier

    @maven2_asset2_classifier.setter
    def maven2_asset2_classifier(self, maven2_asset2_classifier):
        """Sets the maven2_asset2_classifier of this V1ComponentsBody.

        maven2 Asset 2 Classifier  # noqa: E501

        :param maven2_asset2_classifier: The maven2_asset2_classifier of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_asset2_classifier = maven2_asset2_classifier

    @property
    def maven2_asset2_extension(self):
        """Gets the maven2_asset2_extension of this V1ComponentsBody.  # noqa: E501

        maven2 Asset 2 Extension  # noqa: E501

        :return: The maven2_asset2_extension of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_asset2_extension

    @maven2_asset2_extension.setter
    def maven2_asset2_extension(self, maven2_asset2_extension):
        """Sets the maven2_asset2_extension of this V1ComponentsBody.

        maven2 Asset 2 Extension  # noqa: E501

        :param maven2_asset2_extension: The maven2_asset2_extension of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_asset2_extension = maven2_asset2_extension

    @property
    def maven2_asset3(self):
        """Gets the maven2_asset3 of this V1ComponentsBody.  # noqa: E501

        maven2 Asset 3  # noqa: E501

        :return: The maven2_asset3 of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_asset3

    @maven2_asset3.setter
    def maven2_asset3(self, maven2_asset3):
        """Sets the maven2_asset3 of this V1ComponentsBody.

        maven2 Asset 3  # noqa: E501

        :param maven2_asset3: The maven2_asset3 of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_asset3 = maven2_asset3

    @property
    def maven2_asset3_classifier(self):
        """Gets the maven2_asset3_classifier of this V1ComponentsBody.  # noqa: E501

        maven2 Asset 3 Classifier  # noqa: E501

        :return: The maven2_asset3_classifier of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_asset3_classifier

    @maven2_asset3_classifier.setter
    def maven2_asset3_classifier(self, maven2_asset3_classifier):
        """Sets the maven2_asset3_classifier of this V1ComponentsBody.

        maven2 Asset 3 Classifier  # noqa: E501

        :param maven2_asset3_classifier: The maven2_asset3_classifier of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_asset3_classifier = maven2_asset3_classifier

    @property
    def maven2_asset3_extension(self):
        """Gets the maven2_asset3_extension of this V1ComponentsBody.  # noqa: E501

        maven2 Asset 3 Extension  # noqa: E501

        :return: The maven2_asset3_extension of this V1ComponentsBody.  # noqa: E501
        :rtype: str
        """
        return self._maven2_asset3_extension

    @maven2_asset3_extension.setter
    def maven2_asset3_extension(self, maven2_asset3_extension):
        """Sets the maven2_asset3_extension of this V1ComponentsBody.

        maven2 Asset 3 Extension  # noqa: E501

        :param maven2_asset3_extension: The maven2_asset3_extension of this V1ComponentsBody.  # noqa: E501
        :type: str
        """

        self._maven2_asset3_extension = maven2_asset3_extension

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(V1ComponentsBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1ComponentsBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
