# coding: utf-8

"""
    Nexus Repository Manager REST API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 3.42.0-01
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class SamlConfigurationXO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "entity_id": "str",
        "idp_metadata": "str",
        "username_attribute": "str",
        "first_name_attribute": "str",
        "last_name_attribute": "str",
        "email_attribute": "str",
        "groups_attribute": "str",
        "validate_response_signature": "bool",
        "validate_assertion_signature": "bool",
    }

    attribute_map = {
        "entity_id": "entityId",
        "idp_metadata": "idpMetadata",
        "username_attribute": "usernameAttribute",
        "first_name_attribute": "firstNameAttribute",
        "last_name_attribute": "lastNameAttribute",
        "email_attribute": "emailAttribute",
        "groups_attribute": "groupsAttribute",
        "validate_response_signature": "validateResponseSignature",
        "validate_assertion_signature": "validateAssertionSignature",
    }

    def __init__(
        self,
        entity_id=None,
        idp_metadata=None,
        username_attribute=None,
        first_name_attribute=None,
        last_name_attribute=None,
        email_attribute=None,
        groups_attribute=None,
        validate_response_signature=None,
        validate_assertion_signature=None,
    ):  # noqa: E501
        """SamlConfigurationXO - a model defined in Swagger"""  # noqa: E501
        self._entity_id = None
        self._idp_metadata = None
        self._username_attribute = None
        self._first_name_attribute = None
        self._last_name_attribute = None
        self._email_attribute = None
        self._groups_attribute = None
        self._validate_response_signature = None
        self._validate_assertion_signature = None
        self.discriminator = None
        if entity_id is not None:
            self.entity_id = entity_id
        self.idp_metadata = idp_metadata
        self.username_attribute = username_attribute
        if first_name_attribute is not None:
            self.first_name_attribute = first_name_attribute
        if last_name_attribute is not None:
            self.last_name_attribute = last_name_attribute
        if email_attribute is not None:
            self.email_attribute = email_attribute
        if groups_attribute is not None:
            self.groups_attribute = groups_attribute
        if validate_response_signature is not None:
            self.validate_response_signature = validate_response_signature
        if validate_assertion_signature is not None:
            self.validate_assertion_signature = validate_assertion_signature

    @property
    def entity_id(self):
        """Gets the entity_id of this SamlConfigurationXO.  # noqa: E501

        SAML Service Provider's unique identifying URI  # noqa: E501

        :return: The entity_id of this SamlConfigurationXO.  # noqa: E501
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this SamlConfigurationXO.

        SAML Service Provider's unique identifying URI  # noqa: E501

        :param entity_id: The entity_id of this SamlConfigurationXO.  # noqa: E501
        :type: str
        """

        self._entity_id = entity_id

    @property
    def idp_metadata(self):
        """Gets the idp_metadata of this SamlConfigurationXO.  # noqa: E501

        SAML Identity Provider Metadata XML  # noqa: E501

        :return: The idp_metadata of this SamlConfigurationXO.  # noqa: E501
        :rtype: str
        """
        return self._idp_metadata

    @idp_metadata.setter
    def idp_metadata(self, idp_metadata):
        """Sets the idp_metadata of this SamlConfigurationXO.

        SAML Identity Provider Metadata XML  # noqa: E501

        :param idp_metadata: The idp_metadata of this SamlConfigurationXO.  # noqa: E501
        :type: str
        """
        if idp_metadata is None:
            raise ValueError(
                "Invalid value for `idp_metadata`, must not be `None`"
            )  # noqa: E501

        self._idp_metadata = idp_metadata

    @property
    def username_attribute(self):
        """Gets the username_attribute of this SamlConfigurationXO.  # noqa: E501

        SAML attribute name for the username  # noqa: E501

        :return: The username_attribute of this SamlConfigurationXO.  # noqa: E501
        :rtype: str
        """
        return self._username_attribute

    @username_attribute.setter
    def username_attribute(self, username_attribute):
        """Sets the username_attribute of this SamlConfigurationXO.

        SAML attribute name for the username  # noqa: E501

        :param username_attribute: The username_attribute of this SamlConfigurationXO.  # noqa: E501
        :type: str
        """
        if username_attribute is None:
            raise ValueError(
                "Invalid value for `username_attribute`, must not be `None`"
            )  # noqa: E501

        self._username_attribute = username_attribute

    @property
    def first_name_attribute(self):
        """Gets the first_name_attribute of this SamlConfigurationXO.  # noqa: E501

        SAML attribute name for the first name  # noqa: E501

        :return: The first_name_attribute of this SamlConfigurationXO.  # noqa: E501
        :rtype: str
        """
        return self._first_name_attribute

    @first_name_attribute.setter
    def first_name_attribute(self, first_name_attribute):
        """Sets the first_name_attribute of this SamlConfigurationXO.

        SAML attribute name for the first name  # noqa: E501

        :param first_name_attribute: The first_name_attribute of this SamlConfigurationXO.  # noqa: E501
        :type: str
        """

        self._first_name_attribute = first_name_attribute

    @property
    def last_name_attribute(self):
        """Gets the last_name_attribute of this SamlConfigurationXO.  # noqa: E501

        SAML attribute name for the last name  # noqa: E501

        :return: The last_name_attribute of this SamlConfigurationXO.  # noqa: E501
        :rtype: str
        """
        return self._last_name_attribute

    @last_name_attribute.setter
    def last_name_attribute(self, last_name_attribute):
        """Sets the last_name_attribute of this SamlConfigurationXO.

        SAML attribute name for the last name  # noqa: E501

        :param last_name_attribute: The last_name_attribute of this SamlConfigurationXO.  # noqa: E501
        :type: str
        """

        self._last_name_attribute = last_name_attribute

    @property
    def email_attribute(self):
        """Gets the email_attribute of this SamlConfigurationXO.  # noqa: E501

        SAML attribute name for email  # noqa: E501

        :return: The email_attribute of this SamlConfigurationXO.  # noqa: E501
        :rtype: str
        """
        return self._email_attribute

    @email_attribute.setter
    def email_attribute(self, email_attribute):
        """Sets the email_attribute of this SamlConfigurationXO.

        SAML attribute name for email  # noqa: E501

        :param email_attribute: The email_attribute of this SamlConfigurationXO.  # noqa: E501
        :type: str
        """

        self._email_attribute = email_attribute

    @property
    def groups_attribute(self):
        """Gets the groups_attribute of this SamlConfigurationXO.  # noqa: E501

        SAML attribute name for groups which maps the Identity Provider groups to a Nexus Repository Manager role  # noqa: E501

        :return: The groups_attribute of this SamlConfigurationXO.  # noqa: E501
        :rtype: str
        """
        return self._groups_attribute

    @groups_attribute.setter
    def groups_attribute(self, groups_attribute):
        """Sets the groups_attribute of this SamlConfigurationXO.

        SAML attribute name for groups which maps the Identity Provider groups to a Nexus Repository Manager role  # noqa: E501

        :param groups_attribute: The groups_attribute of this SamlConfigurationXO.  # noqa: E501
        :type: str
        """

        self._groups_attribute = groups_attribute

    @property
    def validate_response_signature(self):
        """Gets the validate_response_signature of this SamlConfigurationXO.  # noqa: E501

        Validate signatures on responses from Identity Provider  # noqa: E501

        :return: The validate_response_signature of this SamlConfigurationXO.  # noqa: E501
        :rtype: bool
        """
        return self._validate_response_signature

    @validate_response_signature.setter
    def validate_response_signature(self, validate_response_signature):
        """Sets the validate_response_signature of this SamlConfigurationXO.

        Validate signatures on responses from Identity Provider  # noqa: E501

        :param validate_response_signature: The validate_response_signature of this SamlConfigurationXO.  # noqa: E501
        :type: bool
        """

        self._validate_response_signature = validate_response_signature

    @property
    def validate_assertion_signature(self):
        """Gets the validate_assertion_signature of this SamlConfigurationXO.  # noqa: E501

        Validate signatures on assertions from Identity Provider  # noqa: E501

        :return: The validate_assertion_signature of this SamlConfigurationXO.  # noqa: E501
        :rtype: bool
        """
        return self._validate_assertion_signature

    @validate_assertion_signature.setter
    def validate_assertion_signature(self, validate_assertion_signature):
        """Sets the validate_assertion_signature of this SamlConfigurationXO.

        Validate signatures on assertions from Identity Provider  # noqa: E501

        :param validate_assertion_signature: The validate_assertion_signature of this SamlConfigurationXO.  # noqa: E501
        :type: bool
        """

        self._validate_assertion_signature = validate_assertion_signature

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(SamlConfigurationXO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SamlConfigurationXO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
