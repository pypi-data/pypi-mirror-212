# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qwak/feature_store/features/real_time_feature_extractor_deployment.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nHqwak/feature_store/features/real_time_feature_extractor_deployment.proto\x12\x1bqwak.feature.store.features\x1a\x1fgoogle/protobuf/timestamp.proto\"\xde\x02\n\x18\x45xtractorDeploymentBrief\x12\x15\n\rdeployment_id\x18\x01 \x01(\t\x12\x46\n\x06status\x18\x02 \x01(\x0e\x32\x36.qwak.feature.store.features.ExtractorDeploymentStatus\x12\x13\n\x0b\x64\x65ployed_by\x18\x03 \x01(\t\x12\x1b\n\x13\x66\x61ilure_reason_code\x18\x04 \x01(\t\x12\x17\n\x0f\x66\x61ilure_message\x18\x05 \x01(\t\x12\x19\n\x11technical_details\x18\x06 \x01(\t\x12\x38\n\x14\x64\x65ployment_timestamp\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x14\n\x0c\x65xtractor_id\x18\x08 \x01(\t\x12\x16\n\x0e\x65nvironment_id\x18\t \x01(\t\x12\x15\n\rfeatureset_id\x18\n \x01(\t\"\xfe\x01\n\"KubernetesExtractorDeploymentState\x12\x1f\n\x17\x65xtractor_deployment_id\x18\x01 \x01(\t\x12\x14\n\x0c\x65xtractor_id\x18\x02 \x01(\t\x12\x15\n\rfeatureset_id\x18\x03 \x01(\t\x12\x46\n\x06status\x18\x04 \x01(\x0e\x32\x36.qwak.feature.store.features.ExtractorDeploymentStatus\x12\x42\n\x0estatus_details\x18\x05 \x01(\x0b\x32*.qwak.feature.store.features.StatusDetails\"\xa1\x02\n\rStatusDetails\x12S\n\x16pending_status_details\x18\x01 \x01(\x0b\x32\x31.qwak.feature.store.features.PendingStatusDetailsH\x00\x12V\n\x16success_status_details\x18\x02 \x01(\x0b\x32\x34.qwak.feature.store.features.SuccessfulStatusDetailsH\x00\x12Q\n\x15\x66\x61iled_status_details\x18\x03 \x01(\x0b\x32\x30.qwak.feature.store.features.FailedStatusDetailsH\x00\x42\x10\n\x0estatus_details\"\x9e\x01\n\x14PendingStatusDetails\x12\x42\n\x0cold_instance\x18\x01 \x01(\x0b\x32,.qwak.feature.store.features.InstanceDetails\x12\x42\n\x0cnew_instance\x18\x02 \x01(\x0b\x32,.qwak.feature.store.features.InstanceDetails\"a\n\x17SuccessfulStatusDetails\x12\x46\n\x10running_instance\x18\x01 \x01(\x0b\x32,.qwak.feature.store.features.InstanceDetails\"\xe6\x01\n\x13\x46\x61iledStatusDetails\x12\x44\n\x0f\x66\x61ilure_details\x18\x01 \x01(\x0b\x32+.qwak.feature.store.features.FailureDetails\x12\x42\n\x0cold_instance\x18\x02 \x01(\x0b\x32,.qwak.feature.store.features.InstanceDetails\x12\x45\n\x0f\x66\x61iled_instance\x18\x03 \x01(\x0b\x32,.qwak.feature.store.features.InstanceDetails\"\x92\x01\n\x0e\x46\x61ilureDetails\x12`\n\x1e\x64\x65ployment_failure_reason_code\x18\x01 \x01(\x0e\x32\x38.qwak.feature.store.features.DeploymentFailureReasonCode\x12\x1e\n\x16\x66\x61ilure_reason_details\x18\x02 \x01(\t\"Z\n\x0fInstanceDetails\x12\x15\n\rdeployment_id\x18\x01 \x01(\t\x12\x14\n\x0c\x65xtractor_id\x18\x02 \x01(\t\x12\x1a\n\x12\x61vailable_replicas\x18\x03 \x01(\x05*\xa7\x02\n\x19\x45xtractorDeploymentStatus\x12\x16\n\x12INVALID_DEPLOYMENT\x10\x00\x12\x19\n\x15INITIATING_DEPLOYMENT\x10\x01\x12 \n\x1c\x46\x41ILED_INITIATING_DEPLOYMENT\x10\x02\x12\x16\n\x12PENDING_DEPLOYMENT\x10\x03\x12\x19\n\x15SUCCESSFUL_DEPLOYMENT\x10\x04\x12\x15\n\x11\x46\x41ILED_DEPLOYMENT\x10\x05\x12\x1b\n\x17INITIATING_UNDEPLOYMENT\x10\x06\x12\x18\n\x14PENDING_UNDEPLOYMENT\x10\x07\x12\x1b\n\x17SUCCESSFUL_UNDEPLOYMENT\x10\x08\x12\x17\n\x13\x46\x41ILED_UNDEPLOYMENT\x10\t*\x97\x02\n\x1b\x44\x65ploymentFailureReasonCode\x12\x18\n\x14INVALID_FAILURE_CODE\x10\x00\x12\x12\n\x0eUNKNOWN_REASON\x10\x01\x12\x1e\n\x1aNO_REPLICA_SETS_PODS_FOUND\x10\x02\x12!\n\x1d\x45XTRACTOR_CONTAINER_NOT_FOUND\x10\x03\x12\x11\n\rUNSCHEDULABLE\x10\x04\x12\x1a\n\x16\x44OCKER_IMAGE_NOT_FOUND\x10\x05\x12\x19\n\x15MEMORY_LIMIT_EXCEEDED\x10\x06\x12\x0e\n\nCRASH_LOOP\x10\x07\x12-\n)CONTAINER_FAIL_TO_LOAD_FOR_UNKNOWN_REASON\x10\x08\x42[\n&com.qwak.ai.feature.store.features.apiP\x01Z/qwak/featurestore/features;featurestorefeaturesb\x06proto3')

_EXTRACTORDEPLOYMENTSTATUS = DESCRIPTOR.enum_types_by_name['ExtractorDeploymentStatus']
ExtractorDeploymentStatus = enum_type_wrapper.EnumTypeWrapper(_EXTRACTORDEPLOYMENTSTATUS)
_DEPLOYMENTFAILUREREASONCODE = DESCRIPTOR.enum_types_by_name['DeploymentFailureReasonCode']
DeploymentFailureReasonCode = enum_type_wrapper.EnumTypeWrapper(_DEPLOYMENTFAILUREREASONCODE)
INVALID_DEPLOYMENT = 0
INITIATING_DEPLOYMENT = 1
FAILED_INITIATING_DEPLOYMENT = 2
PENDING_DEPLOYMENT = 3
SUCCESSFUL_DEPLOYMENT = 4
FAILED_DEPLOYMENT = 5
INITIATING_UNDEPLOYMENT = 6
PENDING_UNDEPLOYMENT = 7
SUCCESSFUL_UNDEPLOYMENT = 8
FAILED_UNDEPLOYMENT = 9
INVALID_FAILURE_CODE = 0
UNKNOWN_REASON = 1
NO_REPLICA_SETS_PODS_FOUND = 2
EXTRACTOR_CONTAINER_NOT_FOUND = 3
UNSCHEDULABLE = 4
DOCKER_IMAGE_NOT_FOUND = 5
MEMORY_LIMIT_EXCEEDED = 6
CRASH_LOOP = 7
CONTAINER_FAIL_TO_LOAD_FOR_UNKNOWN_REASON = 8


_EXTRACTORDEPLOYMENTBRIEF = DESCRIPTOR.message_types_by_name['ExtractorDeploymentBrief']
_KUBERNETESEXTRACTORDEPLOYMENTSTATE = DESCRIPTOR.message_types_by_name['KubernetesExtractorDeploymentState']
_STATUSDETAILS = DESCRIPTOR.message_types_by_name['StatusDetails']
_PENDINGSTATUSDETAILS = DESCRIPTOR.message_types_by_name['PendingStatusDetails']
_SUCCESSFULSTATUSDETAILS = DESCRIPTOR.message_types_by_name['SuccessfulStatusDetails']
_FAILEDSTATUSDETAILS = DESCRIPTOR.message_types_by_name['FailedStatusDetails']
_FAILUREDETAILS = DESCRIPTOR.message_types_by_name['FailureDetails']
_INSTANCEDETAILS = DESCRIPTOR.message_types_by_name['InstanceDetails']
ExtractorDeploymentBrief = _reflection.GeneratedProtocolMessageType('ExtractorDeploymentBrief', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTORDEPLOYMENTBRIEF,
  '__module__' : 'qwak.feature_store.features.real_time_feature_extractor_deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.features.ExtractorDeploymentBrief)
  })
_sym_db.RegisterMessage(ExtractorDeploymentBrief)

KubernetesExtractorDeploymentState = _reflection.GeneratedProtocolMessageType('KubernetesExtractorDeploymentState', (_message.Message,), {
  'DESCRIPTOR' : _KUBERNETESEXTRACTORDEPLOYMENTSTATE,
  '__module__' : 'qwak.feature_store.features.real_time_feature_extractor_deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.features.KubernetesExtractorDeploymentState)
  })
_sym_db.RegisterMessage(KubernetesExtractorDeploymentState)

StatusDetails = _reflection.GeneratedProtocolMessageType('StatusDetails', (_message.Message,), {
  'DESCRIPTOR' : _STATUSDETAILS,
  '__module__' : 'qwak.feature_store.features.real_time_feature_extractor_deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.features.StatusDetails)
  })
_sym_db.RegisterMessage(StatusDetails)

PendingStatusDetails = _reflection.GeneratedProtocolMessageType('PendingStatusDetails', (_message.Message,), {
  'DESCRIPTOR' : _PENDINGSTATUSDETAILS,
  '__module__' : 'qwak.feature_store.features.real_time_feature_extractor_deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.features.PendingStatusDetails)
  })
_sym_db.RegisterMessage(PendingStatusDetails)

SuccessfulStatusDetails = _reflection.GeneratedProtocolMessageType('SuccessfulStatusDetails', (_message.Message,), {
  'DESCRIPTOR' : _SUCCESSFULSTATUSDETAILS,
  '__module__' : 'qwak.feature_store.features.real_time_feature_extractor_deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.features.SuccessfulStatusDetails)
  })
_sym_db.RegisterMessage(SuccessfulStatusDetails)

FailedStatusDetails = _reflection.GeneratedProtocolMessageType('FailedStatusDetails', (_message.Message,), {
  'DESCRIPTOR' : _FAILEDSTATUSDETAILS,
  '__module__' : 'qwak.feature_store.features.real_time_feature_extractor_deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.features.FailedStatusDetails)
  })
_sym_db.RegisterMessage(FailedStatusDetails)

FailureDetails = _reflection.GeneratedProtocolMessageType('FailureDetails', (_message.Message,), {
  'DESCRIPTOR' : _FAILUREDETAILS,
  '__module__' : 'qwak.feature_store.features.real_time_feature_extractor_deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.features.FailureDetails)
  })
_sym_db.RegisterMessage(FailureDetails)

InstanceDetails = _reflection.GeneratedProtocolMessageType('InstanceDetails', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCEDETAILS,
  '__module__' : 'qwak.feature_store.features.real_time_feature_extractor_deployment_pb2'
  # @@protoc_insertion_point(class_scope:qwak.feature.store.features.InstanceDetails)
  })
_sym_db.RegisterMessage(InstanceDetails)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n&com.qwak.ai.feature.store.features.apiP\001Z/qwak/featurestore/features;featurestorefeatures'
  _EXTRACTORDEPLOYMENTSTATUS._serialized_start=1775
  _EXTRACTORDEPLOYMENTSTATUS._serialized_end=2070
  _DEPLOYMENTFAILUREREASONCODE._serialized_start=2073
  _DEPLOYMENTFAILUREREASONCODE._serialized_end=2352
  _EXTRACTORDEPLOYMENTBRIEF._serialized_start=139
  _EXTRACTORDEPLOYMENTBRIEF._serialized_end=489
  _KUBERNETESEXTRACTORDEPLOYMENTSTATE._serialized_start=492
  _KUBERNETESEXTRACTORDEPLOYMENTSTATE._serialized_end=746
  _STATUSDETAILS._serialized_start=749
  _STATUSDETAILS._serialized_end=1038
  _PENDINGSTATUSDETAILS._serialized_start=1041
  _PENDINGSTATUSDETAILS._serialized_end=1199
  _SUCCESSFULSTATUSDETAILS._serialized_start=1201
  _SUCCESSFULSTATUSDETAILS._serialized_end=1298
  _FAILEDSTATUSDETAILS._serialized_start=1301
  _FAILEDSTATUSDETAILS._serialized_end=1531
  _FAILUREDETAILS._serialized_start=1534
  _FAILUREDETAILS._serialized_end=1680
  _INSTANCEDETAILS._serialized_start=1682
  _INSTANCEDETAILS._serialized_end=1772
# @@protoc_insertion_point(module_scope)
